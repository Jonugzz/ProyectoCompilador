Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    STRING

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAMA LETRERO SCO VARIABLES FUNCIONES PRIN
Rule 2     programa -> PROGRAMA LETRERO SCO FUNCIONES PRIN
Rule 3     programa -> PROGRAMA LETRERO SCO VARIABLES PRIN
Rule 4     programa -> PROGRAMA LETRERO SCO PRIN
Rule 5     VARIABLES -> VAR OTRA
Rule 6     OTRA -> LETRERO OTRA
Rule 7     OTRA -> LETRERO LCOR NUM_I RCOR OTRA
Rule 8     OTRA -> TIPO OTRA
Rule 9     OTRA -> COM OTRA
Rule 10    OTRA -> SCO OTRA
Rule 11    OTRA -> empty
Rule 12    empty -> <empty>
Rule 13    TIPO -> INT
Rule 14    TIPO -> FLOAT
Rule 15    TIPO -> CHAR
Rule 16    FUNCIONES -> FUNCION TIPO LETRERO LPAR OTRA RPAR SCO VARIABLES LBRA ESTATUTOS REGRESA LPAR EXPRESION RPAR SCO RBRA
Rule 17    FUNCIONES -> FUNCION VOID LETRERO LPAR OTRA RPAR SCO VARIABLES LBRA ESTATUTOS RBRA
Rule 18    FUNCIONES -> FUNCION TIPO LETRERO LPAR OTRA RPAR SCO LBRA ESTATUTOS REGRESA LPAR EXPRESION RPAR SCO RBRA
Rule 19    FUNCIONES -> FUNCION VOID LETRERO LPAR OTRA RPAR SCO LBRA ESTATUTOS RBRA
Rule 20    PRIN -> PRINCIPAL LPAR RPAR LBRA ESTATUTOS RBRA
Rule 21    ESTATUTOS -> EST ESTATUTOS
Rule 22    ESTATUTOS -> empty
Rule 23    EST -> ASIGNACION
Rule 24    EST -> LECTURA
Rule 25    EST -> ESCRITURA
Rule 26    EST -> DESICION
Rule 27    EST -> CONDICIONAL
Rule 28    EST -> NOCONDICIONAL
Rule 29    EST -> LLAMADA
Rule 30    ASIGNACION -> LETRERO LCOR EXPRESION RCOR EQUAL EXPRESION SCO
Rule 31    ASIGNACION -> LETRERO EQUAL EXPRESION SCO
Rule 32    LECTURA -> LEE LPAR OTRA RPAR SCO
Rule 33    ESCRITURA -> ESCRIBE LPAR WRITE RPAR SCO
Rule 34    WRITE -> EXPRESION WRITE
Rule 35    WRITE -> LETRERO WRITE
Rule 36    WRITE -> COM WRITE
Rule 37    WRITE -> empty
Rule 38    DESICION -> SI LPAR EXPRESION RPAR ENTONCES LBRA ESTATUTOS RBRA SINO LBRA ESTATUTOS RBRA
Rule 39    DESICION -> SI LPAR EXPRESION RPAR ENTONCES LBRA ESTATUTOS RBRA
Rule 40    CONDICIONAL -> MIENTRAS LPAR EXPRESION RPAR HAZ LBRA ESTATUTOS RBRA
Rule 41    NOCONDICIONAL -> DESDE LETRERO LCOR NUM_I RCOR EQUAL EXPRESION HASTA EXPRESION HACER LBRA ESTATUTOS RBRA
Rule 42    LLAMADA -> LETRERO LPAR OTRA RPAR SCO
Rule 43    EXPRESION -> EXP SIM EXP
Rule 44    EXPRESION -> EXP
Rule 45    SIM -> LT
Rule 46    SIM -> MT
Rule 47    SIM -> NOTEQUAL
Rule 48    SIM -> ELT
Rule 49    SIM -> EMT
Rule 50    SIM -> EEQ
Rule 51    SIM -> AND
Rule 52    SIM -> OR
Rule 53    EXP -> TERMINO PLUS TERMINO
Rule 54    EXP -> TERMINO MINUS TERMINO
Rule 55    EXP -> TERMINO
Rule 56    TERMINO -> FACTOR MULT FACTOR
Rule 57    TERMINO -> FACTOR DIV FACTOR
Rule 58    TERMINO -> FACTOR
Rule 59    FACTOR -> LETRERO LPAR EXP2 RPAR
Rule 60    FACTOR -> LETRERO LCOR EXP RCOR
Rule 61    FACTOR -> LPAR EXP RPAR
Rule 62    FACTOR -> CONSTANTE
Rule 63    EXP2 -> EXP EXP2
Rule 64    EXP2 -> COM EXP2
Rule 65    EXP2 -> empty
Rule 66    CONSTANTE -> NUM_I
Rule 67    CONSTANTE -> NUM_F
Rule 68    CONSTANTE -> CR

Terminals, with rules where they appear

AND                  : 51
CHAR                 : 15
COM                  : 9 36 64
CR                   : 68
DESDE                : 41
DIV                  : 57
EEQ                  : 50
ELT                  : 48
EMT                  : 49
ENTONCES             : 38 39
EQUAL                : 30 31 41
ESCRIBE              : 33
FLOAT                : 14
FUNCION              : 16 17 18 19
HACER                : 41
HASTA                : 41
HAZ                  : 40
INT                  : 13
LBRA                 : 16 17 18 19 20 38 38 39 40 41
LCOR                 : 7 30 41 60
LEE                  : 32
LETRERO              : 1 2 3 4 6 7 16 17 18 19 30 31 35 41 42 59 60
LPAR                 : 16 16 17 18 18 19 20 32 33 38 39 40 42 59 61
LT                   : 45
MIENTRAS             : 40
MINUS                : 54
MT                   : 46
MULT                 : 56
NOTEQUAL             : 47
NUM_F                : 67
NUM_I                : 7 41 66
OR                   : 52
PLUS                 : 53
PRINCIPAL            : 20
PROGRAMA             : 1 2 3 4
RBRA                 : 16 17 18 19 20 38 38 39 40 41
RCOR                 : 7 30 41 60
REGRESA              : 16 18
RPAR                 : 16 16 17 18 18 19 20 32 33 38 39 40 42 59 61
SCO                  : 1 2 3 4 10 16 16 17 18 18 19 30 31 32 33 42
SI                   : 38 39
SINO                 : 38
STRING               : 
VAR                  : 5
VOID                 : 17 19
error                : 

Nonterminals, with rules where they appear

ASIGNACION           : 23
CONDICIONAL          : 27
CONSTANTE            : 62
DESICION             : 26
ESCRITURA            : 25
EST                  : 21
ESTATUTOS            : 16 17 18 19 20 21 38 38 39 40 41
EXP                  : 43 43 44 60 61 63
EXP2                 : 59 63 64
EXPRESION            : 16 18 30 30 31 34 38 39 40 41 41
FACTOR               : 56 56 57 57 58
FUNCIONES            : 1 2
LECTURA              : 24
LLAMADA              : 29
NOCONDICIONAL        : 28
OTRA                 : 5 6 7 8 9 10 16 17 18 19 32 42
PRIN                 : 1 2 3 4
SIM                  : 43
TERMINO              : 53 53 54 54 55
TIPO                 : 8 16 18
VARIABLES            : 1 3 16 17
WRITE                : 33 34 35 36
empty                : 11 22 37 65
programa             : 0

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAMA LETRERO SCO VARIABLES FUNCIONES PRIN
    (2) programa -> . PROGRAMA LETRERO SCO FUNCIONES PRIN
    (3) programa -> . PROGRAMA LETRERO SCO VARIABLES PRIN
    (4) programa -> . PROGRAMA LETRERO SCO PRIN

    PROGRAMA        shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAMA . LETRERO SCO VARIABLES FUNCIONES PRIN
    (2) programa -> PROGRAMA . LETRERO SCO FUNCIONES PRIN
    (3) programa -> PROGRAMA . LETRERO SCO VARIABLES PRIN
    (4) programa -> PROGRAMA . LETRERO SCO PRIN

    LETRERO         shift and go to state 3


state 3

    (1) programa -> PROGRAMA LETRERO . SCO VARIABLES FUNCIONES PRIN
    (2) programa -> PROGRAMA LETRERO . SCO FUNCIONES PRIN
    (3) programa -> PROGRAMA LETRERO . SCO VARIABLES PRIN
    (4) programa -> PROGRAMA LETRERO . SCO PRIN

    SCO             shift and go to state 4


state 4

    (1) programa -> PROGRAMA LETRERO SCO . VARIABLES FUNCIONES PRIN
    (2) programa -> PROGRAMA LETRERO SCO . FUNCIONES PRIN
    (3) programa -> PROGRAMA LETRERO SCO . VARIABLES PRIN
    (4) programa -> PROGRAMA LETRERO SCO . PRIN
    (5) VARIABLES -> . VAR OTRA
    (16) FUNCIONES -> . FUNCION TIPO LETRERO LPAR OTRA RPAR SCO VARIABLES LBRA ESTATUTOS REGRESA LPAR EXPRESION RPAR SCO RBRA
    (17) FUNCIONES -> . FUNCION VOID LETRERO LPAR OTRA RPAR SCO VARIABLES LBRA ESTATUTOS RBRA
    (18) FUNCIONES -> . FUNCION TIPO LETRERO LPAR OTRA RPAR SCO LBRA ESTATUTOS REGRESA LPAR EXPRESION RPAR SCO RBRA
    (19) FUNCIONES -> . FUNCION VOID LETRERO LPAR OTRA RPAR SCO LBRA ESTATUTOS RBRA
    (20) PRIN -> . PRINCIPAL LPAR RPAR LBRA ESTATUTOS RBRA

    VAR             shift and go to state 8
    FUNCION         shift and go to state 9
    PRINCIPAL       shift and go to state 10

    VARIABLES                      shift and go to state 5
    FUNCIONES                      shift and go to state 6
    PRIN                           shift and go to state 7

state 5

    (1) programa -> PROGRAMA LETRERO SCO VARIABLES . FUNCIONES PRIN
    (3) programa -> PROGRAMA LETRERO SCO VARIABLES . PRIN
    (16) FUNCIONES -> . FUNCION TIPO LETRERO LPAR OTRA RPAR SCO VARIABLES LBRA ESTATUTOS REGRESA LPAR EXPRESION RPAR SCO RBRA
    (17) FUNCIONES -> . FUNCION VOID LETRERO LPAR OTRA RPAR SCO VARIABLES LBRA ESTATUTOS RBRA
    (18) FUNCIONES -> . FUNCION TIPO LETRERO LPAR OTRA RPAR SCO LBRA ESTATUTOS REGRESA LPAR EXPRESION RPAR SCO RBRA
    (19) FUNCIONES -> . FUNCION VOID LETRERO LPAR OTRA RPAR SCO LBRA ESTATUTOS RBRA
    (20) PRIN -> . PRINCIPAL LPAR RPAR LBRA ESTATUTOS RBRA

    FUNCION         shift and go to state 9
    PRINCIPAL       shift and go to state 10

    FUNCIONES                      shift and go to state 11
    PRIN                           shift and go to state 12

state 6

    (2) programa -> PROGRAMA LETRERO SCO FUNCIONES . PRIN
    (20) PRIN -> . PRINCIPAL LPAR RPAR LBRA ESTATUTOS RBRA

    PRINCIPAL       shift and go to state 10

    PRIN                           shift and go to state 13

state 7

    (4) programa -> PROGRAMA LETRERO SCO PRIN .

    $end            reduce using rule 4 (programa -> PROGRAMA LETRERO SCO PRIN .)


state 8

    (5) VARIABLES -> VAR . OTRA
    (6) OTRA -> . LETRERO OTRA
    (7) OTRA -> . LETRERO LCOR NUM_I RCOR OTRA
    (8) OTRA -> . TIPO OTRA
    (9) OTRA -> . COM OTRA
    (10) OTRA -> . SCO OTRA
    (11) OTRA -> . empty
    (13) TIPO -> . INT
    (14) TIPO -> . FLOAT
    (15) TIPO -> . CHAR
    (12) empty -> .

    LETRERO         shift and go to state 15
    COM             shift and go to state 17
    SCO             shift and go to state 18
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    CHAR            shift and go to state 22
    FUNCION         reduce using rule 12 (empty -> .)
    PRINCIPAL       reduce using rule 12 (empty -> .)
    LBRA            reduce using rule 12 (empty -> .)

    OTRA                           shift and go to state 14
    TIPO                           shift and go to state 16
    empty                          shift and go to state 19

state 9

    (16) FUNCIONES -> FUNCION . TIPO LETRERO LPAR OTRA RPAR SCO VARIABLES LBRA ESTATUTOS REGRESA LPAR EXPRESION RPAR SCO RBRA
    (17) FUNCIONES -> FUNCION . VOID LETRERO LPAR OTRA RPAR SCO VARIABLES LBRA ESTATUTOS RBRA
    (18) FUNCIONES -> FUNCION . TIPO LETRERO LPAR OTRA RPAR SCO LBRA ESTATUTOS REGRESA LPAR EXPRESION RPAR SCO RBRA
    (19) FUNCIONES -> FUNCION . VOID LETRERO LPAR OTRA RPAR SCO LBRA ESTATUTOS RBRA
    (13) TIPO -> . INT
    (14) TIPO -> . FLOAT
    (15) TIPO -> . CHAR

    VOID            shift and go to state 24
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    CHAR            shift and go to state 22

    TIPO                           shift and go to state 23

state 10

    (20) PRIN -> PRINCIPAL . LPAR RPAR LBRA ESTATUTOS RBRA

    LPAR            shift and go to state 25


state 11

    (1) programa -> PROGRAMA LETRERO SCO VARIABLES FUNCIONES . PRIN
    (20) PRIN -> . PRINCIPAL LPAR RPAR LBRA ESTATUTOS RBRA

    PRINCIPAL       shift and go to state 10

    PRIN                           shift and go to state 26

state 12

    (3) programa -> PROGRAMA LETRERO SCO VARIABLES PRIN .

    $end            reduce using rule 3 (programa -> PROGRAMA LETRERO SCO VARIABLES PRIN .)


state 13

    (2) programa -> PROGRAMA LETRERO SCO FUNCIONES PRIN .

    $end            reduce using rule 2 (programa -> PROGRAMA LETRERO SCO FUNCIONES PRIN .)


state 14

    (5) VARIABLES -> VAR OTRA .

    FUNCION         reduce using rule 5 (VARIABLES -> VAR OTRA .)
    PRINCIPAL       reduce using rule 5 (VARIABLES -> VAR OTRA .)
    LBRA            reduce using rule 5 (VARIABLES -> VAR OTRA .)


state 15

    (6) OTRA -> LETRERO . OTRA
    (7) OTRA -> LETRERO . LCOR NUM_I RCOR OTRA
    (6) OTRA -> . LETRERO OTRA
    (7) OTRA -> . LETRERO LCOR NUM_I RCOR OTRA
    (8) OTRA -> . TIPO OTRA
    (9) OTRA -> . COM OTRA
    (10) OTRA -> . SCO OTRA
    (11) OTRA -> . empty
    (13) TIPO -> . INT
    (14) TIPO -> . FLOAT
    (15) TIPO -> . CHAR
    (12) empty -> .

    LCOR            shift and go to state 28
    LETRERO         shift and go to state 15
    COM             shift and go to state 17
    SCO             shift and go to state 18
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    CHAR            shift and go to state 22
    FUNCION         reduce using rule 12 (empty -> .)
    PRINCIPAL       reduce using rule 12 (empty -> .)
    LBRA            reduce using rule 12 (empty -> .)
    RPAR            reduce using rule 12 (empty -> .)

    OTRA                           shift and go to state 27
    TIPO                           shift and go to state 16
    empty                          shift and go to state 19

state 16

    (8) OTRA -> TIPO . OTRA
    (6) OTRA -> . LETRERO OTRA
    (7) OTRA -> . LETRERO LCOR NUM_I RCOR OTRA
    (8) OTRA -> . TIPO OTRA
    (9) OTRA -> . COM OTRA
    (10) OTRA -> . SCO OTRA
    (11) OTRA -> . empty
    (13) TIPO -> . INT
    (14) TIPO -> . FLOAT
    (15) TIPO -> . CHAR
    (12) empty -> .

    LETRERO         shift and go to state 15
    COM             shift and go to state 17
    SCO             shift and go to state 18
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    CHAR            shift and go to state 22
    FUNCION         reduce using rule 12 (empty -> .)
    PRINCIPAL       reduce using rule 12 (empty -> .)
    LBRA            reduce using rule 12 (empty -> .)
    RPAR            reduce using rule 12 (empty -> .)

    TIPO                           shift and go to state 16
    OTRA                           shift and go to state 29
    empty                          shift and go to state 19

state 17

    (9) OTRA -> COM . OTRA
    (6) OTRA -> . LETRERO OTRA
    (7) OTRA -> . LETRERO LCOR NUM_I RCOR OTRA
    (8) OTRA -> . TIPO OTRA
    (9) OTRA -> . COM OTRA
    (10) OTRA -> . SCO OTRA
    (11) OTRA -> . empty
    (13) TIPO -> . INT
    (14) TIPO -> . FLOAT
    (15) TIPO -> . CHAR
    (12) empty -> .

    LETRERO         shift and go to state 15
    COM             shift and go to state 17
    SCO             shift and go to state 18
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    CHAR            shift and go to state 22
    FUNCION         reduce using rule 12 (empty -> .)
    PRINCIPAL       reduce using rule 12 (empty -> .)
    LBRA            reduce using rule 12 (empty -> .)
    RPAR            reduce using rule 12 (empty -> .)

    OTRA                           shift and go to state 30
    TIPO                           shift and go to state 16
    empty                          shift and go to state 19

state 18

    (10) OTRA -> SCO . OTRA
    (6) OTRA -> . LETRERO OTRA
    (7) OTRA -> . LETRERO LCOR NUM_I RCOR OTRA
    (8) OTRA -> . TIPO OTRA
    (9) OTRA -> . COM OTRA
    (10) OTRA -> . SCO OTRA
    (11) OTRA -> . empty
    (13) TIPO -> . INT
    (14) TIPO -> . FLOAT
    (15) TIPO -> . CHAR
    (12) empty -> .

    LETRERO         shift and go to state 15
    COM             shift and go to state 17
    SCO             shift and go to state 18
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    CHAR            shift and go to state 22
    FUNCION         reduce using rule 12 (empty -> .)
    PRINCIPAL       reduce using rule 12 (empty -> .)
    LBRA            reduce using rule 12 (empty -> .)
    RPAR            reduce using rule 12 (empty -> .)

    OTRA                           shift and go to state 31
    TIPO                           shift and go to state 16
    empty                          shift and go to state 19

state 19

    (11) OTRA -> empty .

    FUNCION         reduce using rule 11 (OTRA -> empty .)
    PRINCIPAL       reduce using rule 11 (OTRA -> empty .)
    LBRA            reduce using rule 11 (OTRA -> empty .)
    RPAR            reduce using rule 11 (OTRA -> empty .)


state 20

    (13) TIPO -> INT .

    LETRERO         reduce using rule 13 (TIPO -> INT .)
    COM             reduce using rule 13 (TIPO -> INT .)
    SCO             reduce using rule 13 (TIPO -> INT .)
    INT             reduce using rule 13 (TIPO -> INT .)
    FLOAT           reduce using rule 13 (TIPO -> INT .)
    CHAR            reduce using rule 13 (TIPO -> INT .)
    FUNCION         reduce using rule 13 (TIPO -> INT .)
    PRINCIPAL       reduce using rule 13 (TIPO -> INT .)
    LBRA            reduce using rule 13 (TIPO -> INT .)
    RPAR            reduce using rule 13 (TIPO -> INT .)


state 21

    (14) TIPO -> FLOAT .

    LETRERO         reduce using rule 14 (TIPO -> FLOAT .)
    COM             reduce using rule 14 (TIPO -> FLOAT .)
    SCO             reduce using rule 14 (TIPO -> FLOAT .)
    INT             reduce using rule 14 (TIPO -> FLOAT .)
    FLOAT           reduce using rule 14 (TIPO -> FLOAT .)
    CHAR            reduce using rule 14 (TIPO -> FLOAT .)
    FUNCION         reduce using rule 14 (TIPO -> FLOAT .)
    PRINCIPAL       reduce using rule 14 (TIPO -> FLOAT .)
    LBRA            reduce using rule 14 (TIPO -> FLOAT .)
    RPAR            reduce using rule 14 (TIPO -> FLOAT .)


state 22

    (15) TIPO -> CHAR .

    LETRERO         reduce using rule 15 (TIPO -> CHAR .)
    COM             reduce using rule 15 (TIPO -> CHAR .)
    SCO             reduce using rule 15 (TIPO -> CHAR .)
    INT             reduce using rule 15 (TIPO -> CHAR .)
    FLOAT           reduce using rule 15 (TIPO -> CHAR .)
    CHAR            reduce using rule 15 (TIPO -> CHAR .)
    FUNCION         reduce using rule 15 (TIPO -> CHAR .)
    PRINCIPAL       reduce using rule 15 (TIPO -> CHAR .)
    LBRA            reduce using rule 15 (TIPO -> CHAR .)
    RPAR            reduce using rule 15 (TIPO -> CHAR .)


state 23

    (16) FUNCIONES -> FUNCION TIPO . LETRERO LPAR OTRA RPAR SCO VARIABLES LBRA ESTATUTOS REGRESA LPAR EXPRESION RPAR SCO RBRA
    (18) FUNCIONES -> FUNCION TIPO . LETRERO LPAR OTRA RPAR SCO LBRA ESTATUTOS REGRESA LPAR EXPRESION RPAR SCO RBRA

    LETRERO         shift and go to state 32


state 24

    (17) FUNCIONES -> FUNCION VOID . LETRERO LPAR OTRA RPAR SCO VARIABLES LBRA ESTATUTOS RBRA
    (19) FUNCIONES -> FUNCION VOID . LETRERO LPAR OTRA RPAR SCO LBRA ESTATUTOS RBRA

    LETRERO         shift and go to state 33


state 25

    (20) PRIN -> PRINCIPAL LPAR . RPAR LBRA ESTATUTOS RBRA

    RPAR            shift and go to state 34


state 26

    (1) programa -> PROGRAMA LETRERO SCO VARIABLES FUNCIONES PRIN .

    $end            reduce using rule 1 (programa -> PROGRAMA LETRERO SCO VARIABLES FUNCIONES PRIN .)


state 27

    (6) OTRA -> LETRERO OTRA .

    FUNCION         reduce using rule 6 (OTRA -> LETRERO OTRA .)
    PRINCIPAL       reduce using rule 6 (OTRA -> LETRERO OTRA .)
    LBRA            reduce using rule 6 (OTRA -> LETRERO OTRA .)
    RPAR            reduce using rule 6 (OTRA -> LETRERO OTRA .)


state 28

    (7) OTRA -> LETRERO LCOR . NUM_I RCOR OTRA

    NUM_I           shift and go to state 35


state 29

    (8) OTRA -> TIPO OTRA .

    FUNCION         reduce using rule 8 (OTRA -> TIPO OTRA .)
    PRINCIPAL       reduce using rule 8 (OTRA -> TIPO OTRA .)
    LBRA            reduce using rule 8 (OTRA -> TIPO OTRA .)
    RPAR            reduce using rule 8 (OTRA -> TIPO OTRA .)


state 30

    (9) OTRA -> COM OTRA .

    FUNCION         reduce using rule 9 (OTRA -> COM OTRA .)
    PRINCIPAL       reduce using rule 9 (OTRA -> COM OTRA .)
    LBRA            reduce using rule 9 (OTRA -> COM OTRA .)
    RPAR            reduce using rule 9 (OTRA -> COM OTRA .)


state 31

    (10) OTRA -> SCO OTRA .

    FUNCION         reduce using rule 10 (OTRA -> SCO OTRA .)
    PRINCIPAL       reduce using rule 10 (OTRA -> SCO OTRA .)
    LBRA            reduce using rule 10 (OTRA -> SCO OTRA .)
    RPAR            reduce using rule 10 (OTRA -> SCO OTRA .)


state 32

    (16) FUNCIONES -> FUNCION TIPO LETRERO . LPAR OTRA RPAR SCO VARIABLES LBRA ESTATUTOS REGRESA LPAR EXPRESION RPAR SCO RBRA
    (18) FUNCIONES -> FUNCION TIPO LETRERO . LPAR OTRA RPAR SCO LBRA ESTATUTOS REGRESA LPAR EXPRESION RPAR SCO RBRA

    LPAR            shift and go to state 36


state 33

    (17) FUNCIONES -> FUNCION VOID LETRERO . LPAR OTRA RPAR SCO VARIABLES LBRA ESTATUTOS RBRA
    (19) FUNCIONES -> FUNCION VOID LETRERO . LPAR OTRA RPAR SCO LBRA ESTATUTOS RBRA

    LPAR            shift and go to state 37


state 34

    (20) PRIN -> PRINCIPAL LPAR RPAR . LBRA ESTATUTOS RBRA

    LBRA            shift and go to state 38


state 35

    (7) OTRA -> LETRERO LCOR NUM_I . RCOR OTRA

    RCOR            shift and go to state 39


state 36

    (16) FUNCIONES -> FUNCION TIPO LETRERO LPAR . OTRA RPAR SCO VARIABLES LBRA ESTATUTOS REGRESA LPAR EXPRESION RPAR SCO RBRA
    (18) FUNCIONES -> FUNCION TIPO LETRERO LPAR . OTRA RPAR SCO LBRA ESTATUTOS REGRESA LPAR EXPRESION RPAR SCO RBRA
    (6) OTRA -> . LETRERO OTRA
    (7) OTRA -> . LETRERO LCOR NUM_I RCOR OTRA
    (8) OTRA -> . TIPO OTRA
    (9) OTRA -> . COM OTRA
    (10) OTRA -> . SCO OTRA
    (11) OTRA -> . empty
    (13) TIPO -> . INT
    (14) TIPO -> . FLOAT
    (15) TIPO -> . CHAR
    (12) empty -> .

    LETRERO         shift and go to state 15
    COM             shift and go to state 17
    SCO             shift and go to state 18
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    CHAR            shift and go to state 22
    RPAR            reduce using rule 12 (empty -> .)

    TIPO                           shift and go to state 16
    OTRA                           shift and go to state 40
    empty                          shift and go to state 19

state 37

    (17) FUNCIONES -> FUNCION VOID LETRERO LPAR . OTRA RPAR SCO VARIABLES LBRA ESTATUTOS RBRA
    (19) FUNCIONES -> FUNCION VOID LETRERO LPAR . OTRA RPAR SCO LBRA ESTATUTOS RBRA
    (6) OTRA -> . LETRERO OTRA
    (7) OTRA -> . LETRERO LCOR NUM_I RCOR OTRA
    (8) OTRA -> . TIPO OTRA
    (9) OTRA -> . COM OTRA
    (10) OTRA -> . SCO OTRA
    (11) OTRA -> . empty
    (13) TIPO -> . INT
    (14) TIPO -> . FLOAT
    (15) TIPO -> . CHAR
    (12) empty -> .

    LETRERO         shift and go to state 15
    COM             shift and go to state 17
    SCO             shift and go to state 18
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    CHAR            shift and go to state 22
    RPAR            reduce using rule 12 (empty -> .)

    OTRA                           shift and go to state 41
    TIPO                           shift and go to state 16
    empty                          shift and go to state 19

state 38

    (20) PRIN -> PRINCIPAL LPAR RPAR LBRA . ESTATUTOS RBRA
    (21) ESTATUTOS -> . EST ESTATUTOS
    (22) ESTATUTOS -> . empty
    (23) EST -> . ASIGNACION
    (24) EST -> . LECTURA
    (25) EST -> . ESCRITURA
    (26) EST -> . DESICION
    (27) EST -> . CONDICIONAL
    (28) EST -> . NOCONDICIONAL
    (29) EST -> . LLAMADA
    (12) empty -> .
    (30) ASIGNACION -> . LETRERO LCOR EXPRESION RCOR EQUAL EXPRESION SCO
    (31) ASIGNACION -> . LETRERO EQUAL EXPRESION SCO
    (32) LECTURA -> . LEE LPAR OTRA RPAR SCO
    (33) ESCRITURA -> . ESCRIBE LPAR WRITE RPAR SCO
    (38) DESICION -> . SI LPAR EXPRESION RPAR ENTONCES LBRA ESTATUTOS RBRA SINO LBRA ESTATUTOS RBRA
    (39) DESICION -> . SI LPAR EXPRESION RPAR ENTONCES LBRA ESTATUTOS RBRA
    (40) CONDICIONAL -> . MIENTRAS LPAR EXPRESION RPAR HAZ LBRA ESTATUTOS RBRA
    (41) NOCONDICIONAL -> . DESDE LETRERO LCOR NUM_I RCOR EQUAL EXPRESION HASTA EXPRESION HACER LBRA ESTATUTOS RBRA
    (42) LLAMADA -> . LETRERO LPAR OTRA RPAR SCO

    RBRA            reduce using rule 12 (empty -> .)
    LETRERO         shift and go to state 52
    LEE             shift and go to state 53
    ESCRIBE         shift and go to state 54
    SI              shift and go to state 55
    MIENTRAS        shift and go to state 56
    DESDE           shift and go to state 57

    ESTATUTOS                      shift and go to state 42
    EST                            shift and go to state 43
    empty                          shift and go to state 44
    ASIGNACION                     shift and go to state 45
    LECTURA                        shift and go to state 46
    ESCRITURA                      shift and go to state 47
    DESICION                       shift and go to state 48
    CONDICIONAL                    shift and go to state 49
    NOCONDICIONAL                  shift and go to state 50
    LLAMADA                        shift and go to state 51

state 39

    (7) OTRA -> LETRERO LCOR NUM_I RCOR . OTRA
    (6) OTRA -> . LETRERO OTRA
    (7) OTRA -> . LETRERO LCOR NUM_I RCOR OTRA
    (8) OTRA -> . TIPO OTRA
    (9) OTRA -> . COM OTRA
    (10) OTRA -> . SCO OTRA
    (11) OTRA -> . empty
    (13) TIPO -> . INT
    (14) TIPO -> . FLOAT
    (15) TIPO -> . CHAR
    (12) empty -> .

    LETRERO         shift and go to state 15
    COM             shift and go to state 17
    SCO             shift and go to state 18
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    CHAR            shift and go to state 22
    FUNCION         reduce using rule 12 (empty -> .)
    PRINCIPAL       reduce using rule 12 (empty -> .)
    LBRA            reduce using rule 12 (empty -> .)
    RPAR            reduce using rule 12 (empty -> .)

    OTRA                           shift and go to state 58
    TIPO                           shift and go to state 16
    empty                          shift and go to state 19

state 40

    (16) FUNCIONES -> FUNCION TIPO LETRERO LPAR OTRA . RPAR SCO VARIABLES LBRA ESTATUTOS REGRESA LPAR EXPRESION RPAR SCO RBRA
    (18) FUNCIONES -> FUNCION TIPO LETRERO LPAR OTRA . RPAR SCO LBRA ESTATUTOS REGRESA LPAR EXPRESION RPAR SCO RBRA

    RPAR            shift and go to state 59


state 41

    (17) FUNCIONES -> FUNCION VOID LETRERO LPAR OTRA . RPAR SCO VARIABLES LBRA ESTATUTOS RBRA
    (19) FUNCIONES -> FUNCION VOID LETRERO LPAR OTRA . RPAR SCO LBRA ESTATUTOS RBRA

    RPAR            shift and go to state 60


state 42

    (20) PRIN -> PRINCIPAL LPAR RPAR LBRA ESTATUTOS . RBRA

    RBRA            shift and go to state 61


state 43

    (21) ESTATUTOS -> EST . ESTATUTOS
    (21) ESTATUTOS -> . EST ESTATUTOS
    (22) ESTATUTOS -> . empty
    (23) EST -> . ASIGNACION
    (24) EST -> . LECTURA
    (25) EST -> . ESCRITURA
    (26) EST -> . DESICION
    (27) EST -> . CONDICIONAL
    (28) EST -> . NOCONDICIONAL
    (29) EST -> . LLAMADA
    (12) empty -> .
    (30) ASIGNACION -> . LETRERO LCOR EXPRESION RCOR EQUAL EXPRESION SCO
    (31) ASIGNACION -> . LETRERO EQUAL EXPRESION SCO
    (32) LECTURA -> . LEE LPAR OTRA RPAR SCO
    (33) ESCRITURA -> . ESCRIBE LPAR WRITE RPAR SCO
    (38) DESICION -> . SI LPAR EXPRESION RPAR ENTONCES LBRA ESTATUTOS RBRA SINO LBRA ESTATUTOS RBRA
    (39) DESICION -> . SI LPAR EXPRESION RPAR ENTONCES LBRA ESTATUTOS RBRA
    (40) CONDICIONAL -> . MIENTRAS LPAR EXPRESION RPAR HAZ LBRA ESTATUTOS RBRA
    (41) NOCONDICIONAL -> . DESDE LETRERO LCOR NUM_I RCOR EQUAL EXPRESION HASTA EXPRESION HACER LBRA ESTATUTOS RBRA
    (42) LLAMADA -> . LETRERO LPAR OTRA RPAR SCO

    RBRA            reduce using rule 12 (empty -> .)
    REGRESA         reduce using rule 12 (empty -> .)
    LETRERO         shift and go to state 52
    LEE             shift and go to state 53
    ESCRIBE         shift and go to state 54
    SI              shift and go to state 55
    MIENTRAS        shift and go to state 56
    DESDE           shift and go to state 57

    EST                            shift and go to state 43
    ESTATUTOS                      shift and go to state 62
    empty                          shift and go to state 44
    ASIGNACION                     shift and go to state 45
    LECTURA                        shift and go to state 46
    ESCRITURA                      shift and go to state 47
    DESICION                       shift and go to state 48
    CONDICIONAL                    shift and go to state 49
    NOCONDICIONAL                  shift and go to state 50
    LLAMADA                        shift and go to state 51

state 44

    (22) ESTATUTOS -> empty .

    RBRA            reduce using rule 22 (ESTATUTOS -> empty .)
    REGRESA         reduce using rule 22 (ESTATUTOS -> empty .)


state 45

    (23) EST -> ASIGNACION .

    LETRERO         reduce using rule 23 (EST -> ASIGNACION .)
    LEE             reduce using rule 23 (EST -> ASIGNACION .)
    ESCRIBE         reduce using rule 23 (EST -> ASIGNACION .)
    SI              reduce using rule 23 (EST -> ASIGNACION .)
    MIENTRAS        reduce using rule 23 (EST -> ASIGNACION .)
    DESDE           reduce using rule 23 (EST -> ASIGNACION .)
    RBRA            reduce using rule 23 (EST -> ASIGNACION .)
    REGRESA         reduce using rule 23 (EST -> ASIGNACION .)


state 46

    (24) EST -> LECTURA .

    LETRERO         reduce using rule 24 (EST -> LECTURA .)
    LEE             reduce using rule 24 (EST -> LECTURA .)
    ESCRIBE         reduce using rule 24 (EST -> LECTURA .)
    SI              reduce using rule 24 (EST -> LECTURA .)
    MIENTRAS        reduce using rule 24 (EST -> LECTURA .)
    DESDE           reduce using rule 24 (EST -> LECTURA .)
    RBRA            reduce using rule 24 (EST -> LECTURA .)
    REGRESA         reduce using rule 24 (EST -> LECTURA .)


state 47

    (25) EST -> ESCRITURA .

    LETRERO         reduce using rule 25 (EST -> ESCRITURA .)
    LEE             reduce using rule 25 (EST -> ESCRITURA .)
    ESCRIBE         reduce using rule 25 (EST -> ESCRITURA .)
    SI              reduce using rule 25 (EST -> ESCRITURA .)
    MIENTRAS        reduce using rule 25 (EST -> ESCRITURA .)
    DESDE           reduce using rule 25 (EST -> ESCRITURA .)
    RBRA            reduce using rule 25 (EST -> ESCRITURA .)
    REGRESA         reduce using rule 25 (EST -> ESCRITURA .)


state 48

    (26) EST -> DESICION .

    LETRERO         reduce using rule 26 (EST -> DESICION .)
    LEE             reduce using rule 26 (EST -> DESICION .)
    ESCRIBE         reduce using rule 26 (EST -> DESICION .)
    SI              reduce using rule 26 (EST -> DESICION .)
    MIENTRAS        reduce using rule 26 (EST -> DESICION .)
    DESDE           reduce using rule 26 (EST -> DESICION .)
    RBRA            reduce using rule 26 (EST -> DESICION .)
    REGRESA         reduce using rule 26 (EST -> DESICION .)


state 49

    (27) EST -> CONDICIONAL .

    LETRERO         reduce using rule 27 (EST -> CONDICIONAL .)
    LEE             reduce using rule 27 (EST -> CONDICIONAL .)
    ESCRIBE         reduce using rule 27 (EST -> CONDICIONAL .)
    SI              reduce using rule 27 (EST -> CONDICIONAL .)
    MIENTRAS        reduce using rule 27 (EST -> CONDICIONAL .)
    DESDE           reduce using rule 27 (EST -> CONDICIONAL .)
    RBRA            reduce using rule 27 (EST -> CONDICIONAL .)
    REGRESA         reduce using rule 27 (EST -> CONDICIONAL .)


state 50

    (28) EST -> NOCONDICIONAL .

    LETRERO         reduce using rule 28 (EST -> NOCONDICIONAL .)
    LEE             reduce using rule 28 (EST -> NOCONDICIONAL .)
    ESCRIBE         reduce using rule 28 (EST -> NOCONDICIONAL .)
    SI              reduce using rule 28 (EST -> NOCONDICIONAL .)
    MIENTRAS        reduce using rule 28 (EST -> NOCONDICIONAL .)
    DESDE           reduce using rule 28 (EST -> NOCONDICIONAL .)
    RBRA            reduce using rule 28 (EST -> NOCONDICIONAL .)
    REGRESA         reduce using rule 28 (EST -> NOCONDICIONAL .)


state 51

    (29) EST -> LLAMADA .

    LETRERO         reduce using rule 29 (EST -> LLAMADA .)
    LEE             reduce using rule 29 (EST -> LLAMADA .)
    ESCRIBE         reduce using rule 29 (EST -> LLAMADA .)
    SI              reduce using rule 29 (EST -> LLAMADA .)
    MIENTRAS        reduce using rule 29 (EST -> LLAMADA .)
    DESDE           reduce using rule 29 (EST -> LLAMADA .)
    RBRA            reduce using rule 29 (EST -> LLAMADA .)
    REGRESA         reduce using rule 29 (EST -> LLAMADA .)


state 52

    (30) ASIGNACION -> LETRERO . LCOR EXPRESION RCOR EQUAL EXPRESION SCO
    (31) ASIGNACION -> LETRERO . EQUAL EXPRESION SCO
    (42) LLAMADA -> LETRERO . LPAR OTRA RPAR SCO

    LCOR            shift and go to state 63
    EQUAL           shift and go to state 64
    LPAR            shift and go to state 65


state 53

    (32) LECTURA -> LEE . LPAR OTRA RPAR SCO

    LPAR            shift and go to state 66


state 54

    (33) ESCRITURA -> ESCRIBE . LPAR WRITE RPAR SCO

    LPAR            shift and go to state 67


state 55

    (38) DESICION -> SI . LPAR EXPRESION RPAR ENTONCES LBRA ESTATUTOS RBRA SINO LBRA ESTATUTOS RBRA
    (39) DESICION -> SI . LPAR EXPRESION RPAR ENTONCES LBRA ESTATUTOS RBRA

    LPAR            shift and go to state 68


state 56

    (40) CONDICIONAL -> MIENTRAS . LPAR EXPRESION RPAR HAZ LBRA ESTATUTOS RBRA

    LPAR            shift and go to state 69


state 57

    (41) NOCONDICIONAL -> DESDE . LETRERO LCOR NUM_I RCOR EQUAL EXPRESION HASTA EXPRESION HACER LBRA ESTATUTOS RBRA

    LETRERO         shift and go to state 70


state 58

    (7) OTRA -> LETRERO LCOR NUM_I RCOR OTRA .

    FUNCION         reduce using rule 7 (OTRA -> LETRERO LCOR NUM_I RCOR OTRA .)
    PRINCIPAL       reduce using rule 7 (OTRA -> LETRERO LCOR NUM_I RCOR OTRA .)
    LBRA            reduce using rule 7 (OTRA -> LETRERO LCOR NUM_I RCOR OTRA .)
    RPAR            reduce using rule 7 (OTRA -> LETRERO LCOR NUM_I RCOR OTRA .)


state 59

    (16) FUNCIONES -> FUNCION TIPO LETRERO LPAR OTRA RPAR . SCO VARIABLES LBRA ESTATUTOS REGRESA LPAR EXPRESION RPAR SCO RBRA
    (18) FUNCIONES -> FUNCION TIPO LETRERO LPAR OTRA RPAR . SCO LBRA ESTATUTOS REGRESA LPAR EXPRESION RPAR SCO RBRA

    SCO             shift and go to state 71


state 60

    (17) FUNCIONES -> FUNCION VOID LETRERO LPAR OTRA RPAR . SCO VARIABLES LBRA ESTATUTOS RBRA
    (19) FUNCIONES -> FUNCION VOID LETRERO LPAR OTRA RPAR . SCO LBRA ESTATUTOS RBRA

    SCO             shift and go to state 72


state 61

    (20) PRIN -> PRINCIPAL LPAR RPAR LBRA ESTATUTOS RBRA .

    $end            reduce using rule 20 (PRIN -> PRINCIPAL LPAR RPAR LBRA ESTATUTOS RBRA .)


state 62

    (21) ESTATUTOS -> EST ESTATUTOS .

    RBRA            reduce using rule 21 (ESTATUTOS -> EST ESTATUTOS .)
    REGRESA         reduce using rule 21 (ESTATUTOS -> EST ESTATUTOS .)


state 63

    (30) ASIGNACION -> LETRERO LCOR . EXPRESION RCOR EQUAL EXPRESION SCO
    (43) EXPRESION -> . EXP SIM EXP
    (44) EXPRESION -> . EXP
    (53) EXP -> . TERMINO PLUS TERMINO
    (54) EXP -> . TERMINO MINUS TERMINO
    (55) EXP -> . TERMINO
    (56) TERMINO -> . FACTOR MULT FACTOR
    (57) TERMINO -> . FACTOR DIV FACTOR
    (58) TERMINO -> . FACTOR
    (59) FACTOR -> . LETRERO LPAR EXP2 RPAR
    (60) FACTOR -> . LETRERO LCOR EXP RCOR
    (61) FACTOR -> . LPAR EXP RPAR
    (62) FACTOR -> . CONSTANTE
    (66) CONSTANTE -> . NUM_I
    (67) CONSTANTE -> . NUM_F
    (68) CONSTANTE -> . CR

    LETRERO         shift and go to state 73
    LPAR            shift and go to state 78
    NUM_I           shift and go to state 80
    NUM_F           shift and go to state 81
    CR              shift and go to state 82

    EXPRESION                      shift and go to state 74
    EXP                            shift and go to state 75
    TERMINO                        shift and go to state 76
    FACTOR                         shift and go to state 77
    CONSTANTE                      shift and go to state 79

state 64

    (31) ASIGNACION -> LETRERO EQUAL . EXPRESION SCO
    (43) EXPRESION -> . EXP SIM EXP
    (44) EXPRESION -> . EXP
    (53) EXP -> . TERMINO PLUS TERMINO
    (54) EXP -> . TERMINO MINUS TERMINO
    (55) EXP -> . TERMINO
    (56) TERMINO -> . FACTOR MULT FACTOR
    (57) TERMINO -> . FACTOR DIV FACTOR
    (58) TERMINO -> . FACTOR
    (59) FACTOR -> . LETRERO LPAR EXP2 RPAR
    (60) FACTOR -> . LETRERO LCOR EXP RCOR
    (61) FACTOR -> . LPAR EXP RPAR
    (62) FACTOR -> . CONSTANTE
    (66) CONSTANTE -> . NUM_I
    (67) CONSTANTE -> . NUM_F
    (68) CONSTANTE -> . CR

    LETRERO         shift and go to state 73
    LPAR            shift and go to state 78
    NUM_I           shift and go to state 80
    NUM_F           shift and go to state 81
    CR              shift and go to state 82

    EXPRESION                      shift and go to state 83
    EXP                            shift and go to state 75
    TERMINO                        shift and go to state 76
    FACTOR                         shift and go to state 77
    CONSTANTE                      shift and go to state 79

state 65

    (42) LLAMADA -> LETRERO LPAR . OTRA RPAR SCO
    (6) OTRA -> . LETRERO OTRA
    (7) OTRA -> . LETRERO LCOR NUM_I RCOR OTRA
    (8) OTRA -> . TIPO OTRA
    (9) OTRA -> . COM OTRA
    (10) OTRA -> . SCO OTRA
    (11) OTRA -> . empty
    (13) TIPO -> . INT
    (14) TIPO -> . FLOAT
    (15) TIPO -> . CHAR
    (12) empty -> .

    LETRERO         shift and go to state 15
    COM             shift and go to state 17
    SCO             shift and go to state 18
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    CHAR            shift and go to state 22
    RPAR            reduce using rule 12 (empty -> .)

    OTRA                           shift and go to state 84
    TIPO                           shift and go to state 16
    empty                          shift and go to state 19

state 66

    (32) LECTURA -> LEE LPAR . OTRA RPAR SCO
    (6) OTRA -> . LETRERO OTRA
    (7) OTRA -> . LETRERO LCOR NUM_I RCOR OTRA
    (8) OTRA -> . TIPO OTRA
    (9) OTRA -> . COM OTRA
    (10) OTRA -> . SCO OTRA
    (11) OTRA -> . empty
    (13) TIPO -> . INT
    (14) TIPO -> . FLOAT
    (15) TIPO -> . CHAR
    (12) empty -> .

    LETRERO         shift and go to state 15
    COM             shift and go to state 17
    SCO             shift and go to state 18
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    CHAR            shift and go to state 22
    RPAR            reduce using rule 12 (empty -> .)

    OTRA                           shift and go to state 85
    TIPO                           shift and go to state 16
    empty                          shift and go to state 19

state 67

    (33) ESCRITURA -> ESCRIBE LPAR . WRITE RPAR SCO
    (34) WRITE -> . EXPRESION WRITE
    (35) WRITE -> . LETRERO WRITE
    (36) WRITE -> . COM WRITE
    (37) WRITE -> . empty
    (43) EXPRESION -> . EXP SIM EXP
    (44) EXPRESION -> . EXP
    (12) empty -> .
    (53) EXP -> . TERMINO PLUS TERMINO
    (54) EXP -> . TERMINO MINUS TERMINO
    (55) EXP -> . TERMINO
    (56) TERMINO -> . FACTOR MULT FACTOR
    (57) TERMINO -> . FACTOR DIV FACTOR
    (58) TERMINO -> . FACTOR
    (59) FACTOR -> . LETRERO LPAR EXP2 RPAR
    (60) FACTOR -> . LETRERO LCOR EXP RCOR
    (61) FACTOR -> . LPAR EXP RPAR
    (62) FACTOR -> . CONSTANTE
    (66) CONSTANTE -> . NUM_I
    (67) CONSTANTE -> . NUM_F
    (68) CONSTANTE -> . CR

    LETRERO         shift and go to state 88
    COM             shift and go to state 89
    RPAR            reduce using rule 12 (empty -> .)
    LPAR            shift and go to state 78
    NUM_I           shift and go to state 80
    NUM_F           shift and go to state 81
    CR              shift and go to state 82

    WRITE                          shift and go to state 86
    EXPRESION                      shift and go to state 87
    empty                          shift and go to state 90
    EXP                            shift and go to state 75
    TERMINO                        shift and go to state 76
    FACTOR                         shift and go to state 77
    CONSTANTE                      shift and go to state 79

state 68

    (38) DESICION -> SI LPAR . EXPRESION RPAR ENTONCES LBRA ESTATUTOS RBRA SINO LBRA ESTATUTOS RBRA
    (39) DESICION -> SI LPAR . EXPRESION RPAR ENTONCES LBRA ESTATUTOS RBRA
    (43) EXPRESION -> . EXP SIM EXP
    (44) EXPRESION -> . EXP
    (53) EXP -> . TERMINO PLUS TERMINO
    (54) EXP -> . TERMINO MINUS TERMINO
    (55) EXP -> . TERMINO
    (56) TERMINO -> . FACTOR MULT FACTOR
    (57) TERMINO -> . FACTOR DIV FACTOR
    (58) TERMINO -> . FACTOR
    (59) FACTOR -> . LETRERO LPAR EXP2 RPAR
    (60) FACTOR -> . LETRERO LCOR EXP RCOR
    (61) FACTOR -> . LPAR EXP RPAR
    (62) FACTOR -> . CONSTANTE
    (66) CONSTANTE -> . NUM_I
    (67) CONSTANTE -> . NUM_F
    (68) CONSTANTE -> . CR

    LETRERO         shift and go to state 73
    LPAR            shift and go to state 78
    NUM_I           shift and go to state 80
    NUM_F           shift and go to state 81
    CR              shift and go to state 82

    EXPRESION                      shift and go to state 91
    EXP                            shift and go to state 75
    TERMINO                        shift and go to state 76
    FACTOR                         shift and go to state 77
    CONSTANTE                      shift and go to state 79

state 69

    (40) CONDICIONAL -> MIENTRAS LPAR . EXPRESION RPAR HAZ LBRA ESTATUTOS RBRA
    (43) EXPRESION -> . EXP SIM EXP
    (44) EXPRESION -> . EXP
    (53) EXP -> . TERMINO PLUS TERMINO
    (54) EXP -> . TERMINO MINUS TERMINO
    (55) EXP -> . TERMINO
    (56) TERMINO -> . FACTOR MULT FACTOR
    (57) TERMINO -> . FACTOR DIV FACTOR
    (58) TERMINO -> . FACTOR
    (59) FACTOR -> . LETRERO LPAR EXP2 RPAR
    (60) FACTOR -> . LETRERO LCOR EXP RCOR
    (61) FACTOR -> . LPAR EXP RPAR
    (62) FACTOR -> . CONSTANTE
    (66) CONSTANTE -> . NUM_I
    (67) CONSTANTE -> . NUM_F
    (68) CONSTANTE -> . CR

    LETRERO         shift and go to state 73
    LPAR            shift and go to state 78
    NUM_I           shift and go to state 80
    NUM_F           shift and go to state 81
    CR              shift and go to state 82

    EXPRESION                      shift and go to state 92
    EXP                            shift and go to state 75
    TERMINO                        shift and go to state 76
    FACTOR                         shift and go to state 77
    CONSTANTE                      shift and go to state 79

state 70

    (41) NOCONDICIONAL -> DESDE LETRERO . LCOR NUM_I RCOR EQUAL EXPRESION HASTA EXPRESION HACER LBRA ESTATUTOS RBRA

    LCOR            shift and go to state 93


state 71

    (16) FUNCIONES -> FUNCION TIPO LETRERO LPAR OTRA RPAR SCO . VARIABLES LBRA ESTATUTOS REGRESA LPAR EXPRESION RPAR SCO RBRA
    (18) FUNCIONES -> FUNCION TIPO LETRERO LPAR OTRA RPAR SCO . LBRA ESTATUTOS REGRESA LPAR EXPRESION RPAR SCO RBRA
    (5) VARIABLES -> . VAR OTRA

    LBRA            shift and go to state 95
    VAR             shift and go to state 8

    VARIABLES                      shift and go to state 94

state 72

    (17) FUNCIONES -> FUNCION VOID LETRERO LPAR OTRA RPAR SCO . VARIABLES LBRA ESTATUTOS RBRA
    (19) FUNCIONES -> FUNCION VOID LETRERO LPAR OTRA RPAR SCO . LBRA ESTATUTOS RBRA
    (5) VARIABLES -> . VAR OTRA

    LBRA            shift and go to state 97
    VAR             shift and go to state 8

    VARIABLES                      shift and go to state 96

state 73

    (59) FACTOR -> LETRERO . LPAR EXP2 RPAR
    (60) FACTOR -> LETRERO . LCOR EXP RCOR

    LPAR            shift and go to state 98
    LCOR            shift and go to state 99


state 74

    (30) ASIGNACION -> LETRERO LCOR EXPRESION . RCOR EQUAL EXPRESION SCO

    RCOR            shift and go to state 100


state 75

    (43) EXPRESION -> EXP . SIM EXP
    (44) EXPRESION -> EXP .
    (45) SIM -> . LT
    (46) SIM -> . MT
    (47) SIM -> . NOTEQUAL
    (48) SIM -> . ELT
    (49) SIM -> . EMT
    (50) SIM -> . EEQ
    (51) SIM -> . AND
    (52) SIM -> . OR

    RCOR            reduce using rule 44 (EXPRESION -> EXP .)
    SCO             reduce using rule 44 (EXPRESION -> EXP .)
    LETRERO         reduce using rule 44 (EXPRESION -> EXP .)
    COM             reduce using rule 44 (EXPRESION -> EXP .)
    LPAR            reduce using rule 44 (EXPRESION -> EXP .)
    NUM_I           reduce using rule 44 (EXPRESION -> EXP .)
    NUM_F           reduce using rule 44 (EXPRESION -> EXP .)
    CR              reduce using rule 44 (EXPRESION -> EXP .)
    RPAR            reduce using rule 44 (EXPRESION -> EXP .)
    HASTA           reduce using rule 44 (EXPRESION -> EXP .)
    HACER           reduce using rule 44 (EXPRESION -> EXP .)
    LT              shift and go to state 102
    MT              shift and go to state 103
    NOTEQUAL        shift and go to state 104
    ELT             shift and go to state 105
    EMT             shift and go to state 106
    EEQ             shift and go to state 107
    AND             shift and go to state 108
    OR              shift and go to state 109

    SIM                            shift and go to state 101

state 76

    (53) EXP -> TERMINO . PLUS TERMINO
    (54) EXP -> TERMINO . MINUS TERMINO
    (55) EXP -> TERMINO .

    PLUS            shift and go to state 110
    MINUS           shift and go to state 111
    LT              reduce using rule 55 (EXP -> TERMINO .)
    MT              reduce using rule 55 (EXP -> TERMINO .)
    NOTEQUAL        reduce using rule 55 (EXP -> TERMINO .)
    ELT             reduce using rule 55 (EXP -> TERMINO .)
    EMT             reduce using rule 55 (EXP -> TERMINO .)
    EEQ             reduce using rule 55 (EXP -> TERMINO .)
    AND             reduce using rule 55 (EXP -> TERMINO .)
    OR              reduce using rule 55 (EXP -> TERMINO .)
    RCOR            reduce using rule 55 (EXP -> TERMINO .)
    SCO             reduce using rule 55 (EXP -> TERMINO .)
    LETRERO         reduce using rule 55 (EXP -> TERMINO .)
    COM             reduce using rule 55 (EXP -> TERMINO .)
    LPAR            reduce using rule 55 (EXP -> TERMINO .)
    NUM_I           reduce using rule 55 (EXP -> TERMINO .)
    NUM_F           reduce using rule 55 (EXP -> TERMINO .)
    CR              reduce using rule 55 (EXP -> TERMINO .)
    RPAR            reduce using rule 55 (EXP -> TERMINO .)
    HASTA           reduce using rule 55 (EXP -> TERMINO .)
    HACER           reduce using rule 55 (EXP -> TERMINO .)


state 77

    (56) TERMINO -> FACTOR . MULT FACTOR
    (57) TERMINO -> FACTOR . DIV FACTOR
    (58) TERMINO -> FACTOR .

    MULT            shift and go to state 112
    DIV             shift and go to state 113
    PLUS            reduce using rule 58 (TERMINO -> FACTOR .)
    MINUS           reduce using rule 58 (TERMINO -> FACTOR .)
    LT              reduce using rule 58 (TERMINO -> FACTOR .)
    MT              reduce using rule 58 (TERMINO -> FACTOR .)
    NOTEQUAL        reduce using rule 58 (TERMINO -> FACTOR .)
    ELT             reduce using rule 58 (TERMINO -> FACTOR .)
    EMT             reduce using rule 58 (TERMINO -> FACTOR .)
    EEQ             reduce using rule 58 (TERMINO -> FACTOR .)
    AND             reduce using rule 58 (TERMINO -> FACTOR .)
    OR              reduce using rule 58 (TERMINO -> FACTOR .)
    RCOR            reduce using rule 58 (TERMINO -> FACTOR .)
    SCO             reduce using rule 58 (TERMINO -> FACTOR .)
    LETRERO         reduce using rule 58 (TERMINO -> FACTOR .)
    COM             reduce using rule 58 (TERMINO -> FACTOR .)
    LPAR            reduce using rule 58 (TERMINO -> FACTOR .)
    NUM_I           reduce using rule 58 (TERMINO -> FACTOR .)
    NUM_F           reduce using rule 58 (TERMINO -> FACTOR .)
    CR              reduce using rule 58 (TERMINO -> FACTOR .)
    RPAR            reduce using rule 58 (TERMINO -> FACTOR .)
    HASTA           reduce using rule 58 (TERMINO -> FACTOR .)
    HACER           reduce using rule 58 (TERMINO -> FACTOR .)


state 78

    (61) FACTOR -> LPAR . EXP RPAR
    (53) EXP -> . TERMINO PLUS TERMINO
    (54) EXP -> . TERMINO MINUS TERMINO
    (55) EXP -> . TERMINO
    (56) TERMINO -> . FACTOR MULT FACTOR
    (57) TERMINO -> . FACTOR DIV FACTOR
    (58) TERMINO -> . FACTOR
    (59) FACTOR -> . LETRERO LPAR EXP2 RPAR
    (60) FACTOR -> . LETRERO LCOR EXP RCOR
    (61) FACTOR -> . LPAR EXP RPAR
    (62) FACTOR -> . CONSTANTE
    (66) CONSTANTE -> . NUM_I
    (67) CONSTANTE -> . NUM_F
    (68) CONSTANTE -> . CR

    LETRERO         shift and go to state 73
    LPAR            shift and go to state 78
    NUM_I           shift and go to state 80
    NUM_F           shift and go to state 81
    CR              shift and go to state 82

    EXP                            shift and go to state 114
    TERMINO                        shift and go to state 76
    FACTOR                         shift and go to state 77
    CONSTANTE                      shift and go to state 79

state 79

    (62) FACTOR -> CONSTANTE .

    MULT            reduce using rule 62 (FACTOR -> CONSTANTE .)
    DIV             reduce using rule 62 (FACTOR -> CONSTANTE .)
    PLUS            reduce using rule 62 (FACTOR -> CONSTANTE .)
    MINUS           reduce using rule 62 (FACTOR -> CONSTANTE .)
    LT              reduce using rule 62 (FACTOR -> CONSTANTE .)
    MT              reduce using rule 62 (FACTOR -> CONSTANTE .)
    NOTEQUAL        reduce using rule 62 (FACTOR -> CONSTANTE .)
    ELT             reduce using rule 62 (FACTOR -> CONSTANTE .)
    EMT             reduce using rule 62 (FACTOR -> CONSTANTE .)
    EEQ             reduce using rule 62 (FACTOR -> CONSTANTE .)
    AND             reduce using rule 62 (FACTOR -> CONSTANTE .)
    OR              reduce using rule 62 (FACTOR -> CONSTANTE .)
    RCOR            reduce using rule 62 (FACTOR -> CONSTANTE .)
    SCO             reduce using rule 62 (FACTOR -> CONSTANTE .)
    LETRERO         reduce using rule 62 (FACTOR -> CONSTANTE .)
    COM             reduce using rule 62 (FACTOR -> CONSTANTE .)
    LPAR            reduce using rule 62 (FACTOR -> CONSTANTE .)
    NUM_I           reduce using rule 62 (FACTOR -> CONSTANTE .)
    NUM_F           reduce using rule 62 (FACTOR -> CONSTANTE .)
    CR              reduce using rule 62 (FACTOR -> CONSTANTE .)
    RPAR            reduce using rule 62 (FACTOR -> CONSTANTE .)
    HASTA           reduce using rule 62 (FACTOR -> CONSTANTE .)
    HACER           reduce using rule 62 (FACTOR -> CONSTANTE .)


state 80

    (66) CONSTANTE -> NUM_I .

    MULT            reduce using rule 66 (CONSTANTE -> NUM_I .)
    DIV             reduce using rule 66 (CONSTANTE -> NUM_I .)
    PLUS            reduce using rule 66 (CONSTANTE -> NUM_I .)
    MINUS           reduce using rule 66 (CONSTANTE -> NUM_I .)
    LT              reduce using rule 66 (CONSTANTE -> NUM_I .)
    MT              reduce using rule 66 (CONSTANTE -> NUM_I .)
    NOTEQUAL        reduce using rule 66 (CONSTANTE -> NUM_I .)
    ELT             reduce using rule 66 (CONSTANTE -> NUM_I .)
    EMT             reduce using rule 66 (CONSTANTE -> NUM_I .)
    EEQ             reduce using rule 66 (CONSTANTE -> NUM_I .)
    AND             reduce using rule 66 (CONSTANTE -> NUM_I .)
    OR              reduce using rule 66 (CONSTANTE -> NUM_I .)
    RCOR            reduce using rule 66 (CONSTANTE -> NUM_I .)
    SCO             reduce using rule 66 (CONSTANTE -> NUM_I .)
    LETRERO         reduce using rule 66 (CONSTANTE -> NUM_I .)
    COM             reduce using rule 66 (CONSTANTE -> NUM_I .)
    LPAR            reduce using rule 66 (CONSTANTE -> NUM_I .)
    NUM_I           reduce using rule 66 (CONSTANTE -> NUM_I .)
    NUM_F           reduce using rule 66 (CONSTANTE -> NUM_I .)
    CR              reduce using rule 66 (CONSTANTE -> NUM_I .)
    RPAR            reduce using rule 66 (CONSTANTE -> NUM_I .)
    HASTA           reduce using rule 66 (CONSTANTE -> NUM_I .)
    HACER           reduce using rule 66 (CONSTANTE -> NUM_I .)


state 81

    (67) CONSTANTE -> NUM_F .

    MULT            reduce using rule 67 (CONSTANTE -> NUM_F .)
    DIV             reduce using rule 67 (CONSTANTE -> NUM_F .)
    PLUS            reduce using rule 67 (CONSTANTE -> NUM_F .)
    MINUS           reduce using rule 67 (CONSTANTE -> NUM_F .)
    LT              reduce using rule 67 (CONSTANTE -> NUM_F .)
    MT              reduce using rule 67 (CONSTANTE -> NUM_F .)
    NOTEQUAL        reduce using rule 67 (CONSTANTE -> NUM_F .)
    ELT             reduce using rule 67 (CONSTANTE -> NUM_F .)
    EMT             reduce using rule 67 (CONSTANTE -> NUM_F .)
    EEQ             reduce using rule 67 (CONSTANTE -> NUM_F .)
    AND             reduce using rule 67 (CONSTANTE -> NUM_F .)
    OR              reduce using rule 67 (CONSTANTE -> NUM_F .)
    RCOR            reduce using rule 67 (CONSTANTE -> NUM_F .)
    SCO             reduce using rule 67 (CONSTANTE -> NUM_F .)
    LETRERO         reduce using rule 67 (CONSTANTE -> NUM_F .)
    COM             reduce using rule 67 (CONSTANTE -> NUM_F .)
    LPAR            reduce using rule 67 (CONSTANTE -> NUM_F .)
    NUM_I           reduce using rule 67 (CONSTANTE -> NUM_F .)
    NUM_F           reduce using rule 67 (CONSTANTE -> NUM_F .)
    CR              reduce using rule 67 (CONSTANTE -> NUM_F .)
    RPAR            reduce using rule 67 (CONSTANTE -> NUM_F .)
    HASTA           reduce using rule 67 (CONSTANTE -> NUM_F .)
    HACER           reduce using rule 67 (CONSTANTE -> NUM_F .)


state 82

    (68) CONSTANTE -> CR .

    MULT            reduce using rule 68 (CONSTANTE -> CR .)
    DIV             reduce using rule 68 (CONSTANTE -> CR .)
    PLUS            reduce using rule 68 (CONSTANTE -> CR .)
    MINUS           reduce using rule 68 (CONSTANTE -> CR .)
    LT              reduce using rule 68 (CONSTANTE -> CR .)
    MT              reduce using rule 68 (CONSTANTE -> CR .)
    NOTEQUAL        reduce using rule 68 (CONSTANTE -> CR .)
    ELT             reduce using rule 68 (CONSTANTE -> CR .)
    EMT             reduce using rule 68 (CONSTANTE -> CR .)
    EEQ             reduce using rule 68 (CONSTANTE -> CR .)
    AND             reduce using rule 68 (CONSTANTE -> CR .)
    OR              reduce using rule 68 (CONSTANTE -> CR .)
    RCOR            reduce using rule 68 (CONSTANTE -> CR .)
    SCO             reduce using rule 68 (CONSTANTE -> CR .)
    LETRERO         reduce using rule 68 (CONSTANTE -> CR .)
    COM             reduce using rule 68 (CONSTANTE -> CR .)
    LPAR            reduce using rule 68 (CONSTANTE -> CR .)
    NUM_I           reduce using rule 68 (CONSTANTE -> CR .)
    NUM_F           reduce using rule 68 (CONSTANTE -> CR .)
    CR              reduce using rule 68 (CONSTANTE -> CR .)
    RPAR            reduce using rule 68 (CONSTANTE -> CR .)
    HASTA           reduce using rule 68 (CONSTANTE -> CR .)
    HACER           reduce using rule 68 (CONSTANTE -> CR .)


state 83

    (31) ASIGNACION -> LETRERO EQUAL EXPRESION . SCO

    SCO             shift and go to state 115


state 84

    (42) LLAMADA -> LETRERO LPAR OTRA . RPAR SCO

    RPAR            shift and go to state 116


state 85

    (32) LECTURA -> LEE LPAR OTRA . RPAR SCO

    RPAR            shift and go to state 117


state 86

    (33) ESCRITURA -> ESCRIBE LPAR WRITE . RPAR SCO

    RPAR            shift and go to state 118


state 87

    (34) WRITE -> EXPRESION . WRITE
    (34) WRITE -> . EXPRESION WRITE
    (35) WRITE -> . LETRERO WRITE
    (36) WRITE -> . COM WRITE
    (37) WRITE -> . empty
    (43) EXPRESION -> . EXP SIM EXP
    (44) EXPRESION -> . EXP
    (12) empty -> .
    (53) EXP -> . TERMINO PLUS TERMINO
    (54) EXP -> . TERMINO MINUS TERMINO
    (55) EXP -> . TERMINO
    (56) TERMINO -> . FACTOR MULT FACTOR
    (57) TERMINO -> . FACTOR DIV FACTOR
    (58) TERMINO -> . FACTOR
    (59) FACTOR -> . LETRERO LPAR EXP2 RPAR
    (60) FACTOR -> . LETRERO LCOR EXP RCOR
    (61) FACTOR -> . LPAR EXP RPAR
    (62) FACTOR -> . CONSTANTE
    (66) CONSTANTE -> . NUM_I
    (67) CONSTANTE -> . NUM_F
    (68) CONSTANTE -> . CR

    LETRERO         shift and go to state 88
    COM             shift and go to state 89
    RPAR            reduce using rule 12 (empty -> .)
    LPAR            shift and go to state 78
    NUM_I           shift and go to state 80
    NUM_F           shift and go to state 81
    CR              shift and go to state 82

    EXPRESION                      shift and go to state 87
    WRITE                          shift and go to state 119
    empty                          shift and go to state 90
    EXP                            shift and go to state 75
    TERMINO                        shift and go to state 76
    FACTOR                         shift and go to state 77
    CONSTANTE                      shift and go to state 79

state 88

    (35) WRITE -> LETRERO . WRITE
    (59) FACTOR -> LETRERO . LPAR EXP2 RPAR
    (60) FACTOR -> LETRERO . LCOR EXP RCOR
    (34) WRITE -> . EXPRESION WRITE
    (35) WRITE -> . LETRERO WRITE
    (36) WRITE -> . COM WRITE
    (37) WRITE -> . empty
    (43) EXPRESION -> . EXP SIM EXP
    (44) EXPRESION -> . EXP
    (12) empty -> .
    (53) EXP -> . TERMINO PLUS TERMINO
    (54) EXP -> . TERMINO MINUS TERMINO
    (55) EXP -> . TERMINO
    (56) TERMINO -> . FACTOR MULT FACTOR
    (57) TERMINO -> . FACTOR DIV FACTOR
    (58) TERMINO -> . FACTOR
    (59) FACTOR -> . LETRERO LPAR EXP2 RPAR
    (60) FACTOR -> . LETRERO LCOR EXP RCOR
    (61) FACTOR -> . LPAR EXP RPAR
    (62) FACTOR -> . CONSTANTE
    (66) CONSTANTE -> . NUM_I
    (67) CONSTANTE -> . NUM_F
    (68) CONSTANTE -> . CR

    LPAR            shift and go to state 121
    LCOR            shift and go to state 99
    LETRERO         shift and go to state 88
    COM             shift and go to state 89
    RPAR            reduce using rule 12 (empty -> .)
    NUM_I           shift and go to state 80
    NUM_F           shift and go to state 81
    CR              shift and go to state 82

    WRITE                          shift and go to state 120
    EXP                            shift and go to state 75
    EXPRESION                      shift and go to state 87
    empty                          shift and go to state 90
    TERMINO                        shift and go to state 76
    FACTOR                         shift and go to state 77
    CONSTANTE                      shift and go to state 79

state 89

    (36) WRITE -> COM . WRITE
    (34) WRITE -> . EXPRESION WRITE
    (35) WRITE -> . LETRERO WRITE
    (36) WRITE -> . COM WRITE
    (37) WRITE -> . empty
    (43) EXPRESION -> . EXP SIM EXP
    (44) EXPRESION -> . EXP
    (12) empty -> .
    (53) EXP -> . TERMINO PLUS TERMINO
    (54) EXP -> . TERMINO MINUS TERMINO
    (55) EXP -> . TERMINO
    (56) TERMINO -> . FACTOR MULT FACTOR
    (57) TERMINO -> . FACTOR DIV FACTOR
    (58) TERMINO -> . FACTOR
    (59) FACTOR -> . LETRERO LPAR EXP2 RPAR
    (60) FACTOR -> . LETRERO LCOR EXP RCOR
    (61) FACTOR -> . LPAR EXP RPAR
    (62) FACTOR -> . CONSTANTE
    (66) CONSTANTE -> . NUM_I
    (67) CONSTANTE -> . NUM_F
    (68) CONSTANTE -> . CR

    LETRERO         shift and go to state 88
    COM             shift and go to state 89
    RPAR            reduce using rule 12 (empty -> .)
    LPAR            shift and go to state 78
    NUM_I           shift and go to state 80
    NUM_F           shift and go to state 81
    CR              shift and go to state 82

    WRITE                          shift and go to state 122
    EXPRESION                      shift and go to state 87
    empty                          shift and go to state 90
    EXP                            shift and go to state 75
    TERMINO                        shift and go to state 76
    FACTOR                         shift and go to state 77
    CONSTANTE                      shift and go to state 79

state 90

    (37) WRITE -> empty .

    RPAR            reduce using rule 37 (WRITE -> empty .)


state 91

    (38) DESICION -> SI LPAR EXPRESION . RPAR ENTONCES LBRA ESTATUTOS RBRA SINO LBRA ESTATUTOS RBRA
    (39) DESICION -> SI LPAR EXPRESION . RPAR ENTONCES LBRA ESTATUTOS RBRA

    RPAR            shift and go to state 123


state 92

    (40) CONDICIONAL -> MIENTRAS LPAR EXPRESION . RPAR HAZ LBRA ESTATUTOS RBRA

    RPAR            shift and go to state 124


state 93

    (41) NOCONDICIONAL -> DESDE LETRERO LCOR . NUM_I RCOR EQUAL EXPRESION HASTA EXPRESION HACER LBRA ESTATUTOS RBRA

    NUM_I           shift and go to state 125


state 94

    (16) FUNCIONES -> FUNCION TIPO LETRERO LPAR OTRA RPAR SCO VARIABLES . LBRA ESTATUTOS REGRESA LPAR EXPRESION RPAR SCO RBRA

    LBRA            shift and go to state 126


state 95

    (18) FUNCIONES -> FUNCION TIPO LETRERO LPAR OTRA RPAR SCO LBRA . ESTATUTOS REGRESA LPAR EXPRESION RPAR SCO RBRA
    (21) ESTATUTOS -> . EST ESTATUTOS
    (22) ESTATUTOS -> . empty
    (23) EST -> . ASIGNACION
    (24) EST -> . LECTURA
    (25) EST -> . ESCRITURA
    (26) EST -> . DESICION
    (27) EST -> . CONDICIONAL
    (28) EST -> . NOCONDICIONAL
    (29) EST -> . LLAMADA
    (12) empty -> .
    (30) ASIGNACION -> . LETRERO LCOR EXPRESION RCOR EQUAL EXPRESION SCO
    (31) ASIGNACION -> . LETRERO EQUAL EXPRESION SCO
    (32) LECTURA -> . LEE LPAR OTRA RPAR SCO
    (33) ESCRITURA -> . ESCRIBE LPAR WRITE RPAR SCO
    (38) DESICION -> . SI LPAR EXPRESION RPAR ENTONCES LBRA ESTATUTOS RBRA SINO LBRA ESTATUTOS RBRA
    (39) DESICION -> . SI LPAR EXPRESION RPAR ENTONCES LBRA ESTATUTOS RBRA
    (40) CONDICIONAL -> . MIENTRAS LPAR EXPRESION RPAR HAZ LBRA ESTATUTOS RBRA
    (41) NOCONDICIONAL -> . DESDE LETRERO LCOR NUM_I RCOR EQUAL EXPRESION HASTA EXPRESION HACER LBRA ESTATUTOS RBRA
    (42) LLAMADA -> . LETRERO LPAR OTRA RPAR SCO

    REGRESA         reduce using rule 12 (empty -> .)
    LETRERO         shift and go to state 52
    LEE             shift and go to state 53
    ESCRIBE         shift and go to state 54
    SI              shift and go to state 55
    MIENTRAS        shift and go to state 56
    DESDE           shift and go to state 57

    ESTATUTOS                      shift and go to state 127
    EST                            shift and go to state 43
    empty                          shift and go to state 44
    ASIGNACION                     shift and go to state 45
    LECTURA                        shift and go to state 46
    ESCRITURA                      shift and go to state 47
    DESICION                       shift and go to state 48
    CONDICIONAL                    shift and go to state 49
    NOCONDICIONAL                  shift and go to state 50
    LLAMADA                        shift and go to state 51

state 96

    (17) FUNCIONES -> FUNCION VOID LETRERO LPAR OTRA RPAR SCO VARIABLES . LBRA ESTATUTOS RBRA

    LBRA            shift and go to state 128


state 97

    (19) FUNCIONES -> FUNCION VOID LETRERO LPAR OTRA RPAR SCO LBRA . ESTATUTOS RBRA
    (21) ESTATUTOS -> . EST ESTATUTOS
    (22) ESTATUTOS -> . empty
    (23) EST -> . ASIGNACION
    (24) EST -> . LECTURA
    (25) EST -> . ESCRITURA
    (26) EST -> . DESICION
    (27) EST -> . CONDICIONAL
    (28) EST -> . NOCONDICIONAL
    (29) EST -> . LLAMADA
    (12) empty -> .
    (30) ASIGNACION -> . LETRERO LCOR EXPRESION RCOR EQUAL EXPRESION SCO
    (31) ASIGNACION -> . LETRERO EQUAL EXPRESION SCO
    (32) LECTURA -> . LEE LPAR OTRA RPAR SCO
    (33) ESCRITURA -> . ESCRIBE LPAR WRITE RPAR SCO
    (38) DESICION -> . SI LPAR EXPRESION RPAR ENTONCES LBRA ESTATUTOS RBRA SINO LBRA ESTATUTOS RBRA
    (39) DESICION -> . SI LPAR EXPRESION RPAR ENTONCES LBRA ESTATUTOS RBRA
    (40) CONDICIONAL -> . MIENTRAS LPAR EXPRESION RPAR HAZ LBRA ESTATUTOS RBRA
    (41) NOCONDICIONAL -> . DESDE LETRERO LCOR NUM_I RCOR EQUAL EXPRESION HASTA EXPRESION HACER LBRA ESTATUTOS RBRA
    (42) LLAMADA -> . LETRERO LPAR OTRA RPAR SCO

    RBRA            reduce using rule 12 (empty -> .)
    LETRERO         shift and go to state 52
    LEE             shift and go to state 53
    ESCRIBE         shift and go to state 54
    SI              shift and go to state 55
    MIENTRAS        shift and go to state 56
    DESDE           shift and go to state 57

    ESTATUTOS                      shift and go to state 129
    EST                            shift and go to state 43
    empty                          shift and go to state 44
    ASIGNACION                     shift and go to state 45
    LECTURA                        shift and go to state 46
    ESCRITURA                      shift and go to state 47
    DESICION                       shift and go to state 48
    CONDICIONAL                    shift and go to state 49
    NOCONDICIONAL                  shift and go to state 50
    LLAMADA                        shift and go to state 51

state 98

    (59) FACTOR -> LETRERO LPAR . EXP2 RPAR
    (63) EXP2 -> . EXP EXP2
    (64) EXP2 -> . COM EXP2
    (65) EXP2 -> . empty
    (53) EXP -> . TERMINO PLUS TERMINO
    (54) EXP -> . TERMINO MINUS TERMINO
    (55) EXP -> . TERMINO
    (12) empty -> .
    (56) TERMINO -> . FACTOR MULT FACTOR
    (57) TERMINO -> . FACTOR DIV FACTOR
    (58) TERMINO -> . FACTOR
    (59) FACTOR -> . LETRERO LPAR EXP2 RPAR
    (60) FACTOR -> . LETRERO LCOR EXP RCOR
    (61) FACTOR -> . LPAR EXP RPAR
    (62) FACTOR -> . CONSTANTE
    (66) CONSTANTE -> . NUM_I
    (67) CONSTANTE -> . NUM_F
    (68) CONSTANTE -> . CR

    COM             shift and go to state 132
    RPAR            reduce using rule 12 (empty -> .)
    LETRERO         shift and go to state 73
    LPAR            shift and go to state 78
    NUM_I           shift and go to state 80
    NUM_F           shift and go to state 81
    CR              shift and go to state 82

    EXP2                           shift and go to state 130
    EXP                            shift and go to state 131
    empty                          shift and go to state 133
    TERMINO                        shift and go to state 76
    FACTOR                         shift and go to state 77
    CONSTANTE                      shift and go to state 79

state 99

    (60) FACTOR -> LETRERO LCOR . EXP RCOR
    (53) EXP -> . TERMINO PLUS TERMINO
    (54) EXP -> . TERMINO MINUS TERMINO
    (55) EXP -> . TERMINO
    (56) TERMINO -> . FACTOR MULT FACTOR
    (57) TERMINO -> . FACTOR DIV FACTOR
    (58) TERMINO -> . FACTOR
    (59) FACTOR -> . LETRERO LPAR EXP2 RPAR
    (60) FACTOR -> . LETRERO LCOR EXP RCOR
    (61) FACTOR -> . LPAR EXP RPAR
    (62) FACTOR -> . CONSTANTE
    (66) CONSTANTE -> . NUM_I
    (67) CONSTANTE -> . NUM_F
    (68) CONSTANTE -> . CR

    LETRERO         shift and go to state 73
    LPAR            shift and go to state 78
    NUM_I           shift and go to state 80
    NUM_F           shift and go to state 81
    CR              shift and go to state 82

    EXP                            shift and go to state 134
    TERMINO                        shift and go to state 76
    FACTOR                         shift and go to state 77
    CONSTANTE                      shift and go to state 79

state 100

    (30) ASIGNACION -> LETRERO LCOR EXPRESION RCOR . EQUAL EXPRESION SCO

    EQUAL           shift and go to state 135


state 101

    (43) EXPRESION -> EXP SIM . EXP
    (53) EXP -> . TERMINO PLUS TERMINO
    (54) EXP -> . TERMINO MINUS TERMINO
    (55) EXP -> . TERMINO
    (56) TERMINO -> . FACTOR MULT FACTOR
    (57) TERMINO -> . FACTOR DIV FACTOR
    (58) TERMINO -> . FACTOR
    (59) FACTOR -> . LETRERO LPAR EXP2 RPAR
    (60) FACTOR -> . LETRERO LCOR EXP RCOR
    (61) FACTOR -> . LPAR EXP RPAR
    (62) FACTOR -> . CONSTANTE
    (66) CONSTANTE -> . NUM_I
    (67) CONSTANTE -> . NUM_F
    (68) CONSTANTE -> . CR

    LETRERO         shift and go to state 73
    LPAR            shift and go to state 78
    NUM_I           shift and go to state 80
    NUM_F           shift and go to state 81
    CR              shift and go to state 82

    EXP                            shift and go to state 136
    TERMINO                        shift and go to state 76
    FACTOR                         shift and go to state 77
    CONSTANTE                      shift and go to state 79

state 102

    (45) SIM -> LT .

    LETRERO         reduce using rule 45 (SIM -> LT .)
    LPAR            reduce using rule 45 (SIM -> LT .)
    NUM_I           reduce using rule 45 (SIM -> LT .)
    NUM_F           reduce using rule 45 (SIM -> LT .)
    CR              reduce using rule 45 (SIM -> LT .)


state 103

    (46) SIM -> MT .

    LETRERO         reduce using rule 46 (SIM -> MT .)
    LPAR            reduce using rule 46 (SIM -> MT .)
    NUM_I           reduce using rule 46 (SIM -> MT .)
    NUM_F           reduce using rule 46 (SIM -> MT .)
    CR              reduce using rule 46 (SIM -> MT .)


state 104

    (47) SIM -> NOTEQUAL .

    LETRERO         reduce using rule 47 (SIM -> NOTEQUAL .)
    LPAR            reduce using rule 47 (SIM -> NOTEQUAL .)
    NUM_I           reduce using rule 47 (SIM -> NOTEQUAL .)
    NUM_F           reduce using rule 47 (SIM -> NOTEQUAL .)
    CR              reduce using rule 47 (SIM -> NOTEQUAL .)


state 105

    (48) SIM -> ELT .

    LETRERO         reduce using rule 48 (SIM -> ELT .)
    LPAR            reduce using rule 48 (SIM -> ELT .)
    NUM_I           reduce using rule 48 (SIM -> ELT .)
    NUM_F           reduce using rule 48 (SIM -> ELT .)
    CR              reduce using rule 48 (SIM -> ELT .)


state 106

    (49) SIM -> EMT .

    LETRERO         reduce using rule 49 (SIM -> EMT .)
    LPAR            reduce using rule 49 (SIM -> EMT .)
    NUM_I           reduce using rule 49 (SIM -> EMT .)
    NUM_F           reduce using rule 49 (SIM -> EMT .)
    CR              reduce using rule 49 (SIM -> EMT .)


state 107

    (50) SIM -> EEQ .

    LETRERO         reduce using rule 50 (SIM -> EEQ .)
    LPAR            reduce using rule 50 (SIM -> EEQ .)
    NUM_I           reduce using rule 50 (SIM -> EEQ .)
    NUM_F           reduce using rule 50 (SIM -> EEQ .)
    CR              reduce using rule 50 (SIM -> EEQ .)


state 108

    (51) SIM -> AND .

    LETRERO         reduce using rule 51 (SIM -> AND .)
    LPAR            reduce using rule 51 (SIM -> AND .)
    NUM_I           reduce using rule 51 (SIM -> AND .)
    NUM_F           reduce using rule 51 (SIM -> AND .)
    CR              reduce using rule 51 (SIM -> AND .)


state 109

    (52) SIM -> OR .

    LETRERO         reduce using rule 52 (SIM -> OR .)
    LPAR            reduce using rule 52 (SIM -> OR .)
    NUM_I           reduce using rule 52 (SIM -> OR .)
    NUM_F           reduce using rule 52 (SIM -> OR .)
    CR              reduce using rule 52 (SIM -> OR .)


state 110

    (53) EXP -> TERMINO PLUS . TERMINO
    (56) TERMINO -> . FACTOR MULT FACTOR
    (57) TERMINO -> . FACTOR DIV FACTOR
    (58) TERMINO -> . FACTOR
    (59) FACTOR -> . LETRERO LPAR EXP2 RPAR
    (60) FACTOR -> . LETRERO LCOR EXP RCOR
    (61) FACTOR -> . LPAR EXP RPAR
    (62) FACTOR -> . CONSTANTE
    (66) CONSTANTE -> . NUM_I
    (67) CONSTANTE -> . NUM_F
    (68) CONSTANTE -> . CR

    LETRERO         shift and go to state 73
    LPAR            shift and go to state 78
    NUM_I           shift and go to state 80
    NUM_F           shift and go to state 81
    CR              shift and go to state 82

    TERMINO                        shift and go to state 137
    FACTOR                         shift and go to state 77
    CONSTANTE                      shift and go to state 79

state 111

    (54) EXP -> TERMINO MINUS . TERMINO
    (56) TERMINO -> . FACTOR MULT FACTOR
    (57) TERMINO -> . FACTOR DIV FACTOR
    (58) TERMINO -> . FACTOR
    (59) FACTOR -> . LETRERO LPAR EXP2 RPAR
    (60) FACTOR -> . LETRERO LCOR EXP RCOR
    (61) FACTOR -> . LPAR EXP RPAR
    (62) FACTOR -> . CONSTANTE
    (66) CONSTANTE -> . NUM_I
    (67) CONSTANTE -> . NUM_F
    (68) CONSTANTE -> . CR

    LETRERO         shift and go to state 73
    LPAR            shift and go to state 78
    NUM_I           shift and go to state 80
    NUM_F           shift and go to state 81
    CR              shift and go to state 82

    TERMINO                        shift and go to state 138
    FACTOR                         shift and go to state 77
    CONSTANTE                      shift and go to state 79

state 112

    (56) TERMINO -> FACTOR MULT . FACTOR
    (59) FACTOR -> . LETRERO LPAR EXP2 RPAR
    (60) FACTOR -> . LETRERO LCOR EXP RCOR
    (61) FACTOR -> . LPAR EXP RPAR
    (62) FACTOR -> . CONSTANTE
    (66) CONSTANTE -> . NUM_I
    (67) CONSTANTE -> . NUM_F
    (68) CONSTANTE -> . CR

    LETRERO         shift and go to state 73
    LPAR            shift and go to state 78
    NUM_I           shift and go to state 80
    NUM_F           shift and go to state 81
    CR              shift and go to state 82

    FACTOR                         shift and go to state 139
    CONSTANTE                      shift and go to state 79

state 113

    (57) TERMINO -> FACTOR DIV . FACTOR
    (59) FACTOR -> . LETRERO LPAR EXP2 RPAR
    (60) FACTOR -> . LETRERO LCOR EXP RCOR
    (61) FACTOR -> . LPAR EXP RPAR
    (62) FACTOR -> . CONSTANTE
    (66) CONSTANTE -> . NUM_I
    (67) CONSTANTE -> . NUM_F
    (68) CONSTANTE -> . CR

    LETRERO         shift and go to state 73
    LPAR            shift and go to state 78
    NUM_I           shift and go to state 80
    NUM_F           shift and go to state 81
    CR              shift and go to state 82

    FACTOR                         shift and go to state 140
    CONSTANTE                      shift and go to state 79

state 114

    (61) FACTOR -> LPAR EXP . RPAR

    RPAR            shift and go to state 141


state 115

    (31) ASIGNACION -> LETRERO EQUAL EXPRESION SCO .

    LETRERO         reduce using rule 31 (ASIGNACION -> LETRERO EQUAL EXPRESION SCO .)
    LEE             reduce using rule 31 (ASIGNACION -> LETRERO EQUAL EXPRESION SCO .)
    ESCRIBE         reduce using rule 31 (ASIGNACION -> LETRERO EQUAL EXPRESION SCO .)
    SI              reduce using rule 31 (ASIGNACION -> LETRERO EQUAL EXPRESION SCO .)
    MIENTRAS        reduce using rule 31 (ASIGNACION -> LETRERO EQUAL EXPRESION SCO .)
    DESDE           reduce using rule 31 (ASIGNACION -> LETRERO EQUAL EXPRESION SCO .)
    RBRA            reduce using rule 31 (ASIGNACION -> LETRERO EQUAL EXPRESION SCO .)
    REGRESA         reduce using rule 31 (ASIGNACION -> LETRERO EQUAL EXPRESION SCO .)


state 116

    (42) LLAMADA -> LETRERO LPAR OTRA RPAR . SCO

    SCO             shift and go to state 142


state 117

    (32) LECTURA -> LEE LPAR OTRA RPAR . SCO

    SCO             shift and go to state 143


state 118

    (33) ESCRITURA -> ESCRIBE LPAR WRITE RPAR . SCO

    SCO             shift and go to state 144


state 119

    (34) WRITE -> EXPRESION WRITE .

    RPAR            reduce using rule 34 (WRITE -> EXPRESION WRITE .)


state 120

    (35) WRITE -> LETRERO WRITE .

    RPAR            reduce using rule 35 (WRITE -> LETRERO WRITE .)


state 121

    (59) FACTOR -> LETRERO LPAR . EXP2 RPAR
    (61) FACTOR -> LPAR . EXP RPAR
    (63) EXP2 -> . EXP EXP2
    (64) EXP2 -> . COM EXP2
    (65) EXP2 -> . empty
    (53) EXP -> . TERMINO PLUS TERMINO
    (54) EXP -> . TERMINO MINUS TERMINO
    (55) EXP -> . TERMINO
    (12) empty -> .
    (56) TERMINO -> . FACTOR MULT FACTOR
    (57) TERMINO -> . FACTOR DIV FACTOR
    (58) TERMINO -> . FACTOR
    (59) FACTOR -> . LETRERO LPAR EXP2 RPAR
    (60) FACTOR -> . LETRERO LCOR EXP RCOR
    (61) FACTOR -> . LPAR EXP RPAR
    (62) FACTOR -> . CONSTANTE
    (66) CONSTANTE -> . NUM_I
    (67) CONSTANTE -> . NUM_F
    (68) CONSTANTE -> . CR

    COM             shift and go to state 132
    RPAR            reduce using rule 12 (empty -> .)
    LETRERO         shift and go to state 73
    LPAR            shift and go to state 78
    NUM_I           shift and go to state 80
    NUM_F           shift and go to state 81
    CR              shift and go to state 82

    EXP2                           shift and go to state 130
    EXP                            shift and go to state 145
    empty                          shift and go to state 133
    TERMINO                        shift and go to state 76
    FACTOR                         shift and go to state 77
    CONSTANTE                      shift and go to state 79

state 122

    (36) WRITE -> COM WRITE .

    RPAR            reduce using rule 36 (WRITE -> COM WRITE .)


state 123

    (38) DESICION -> SI LPAR EXPRESION RPAR . ENTONCES LBRA ESTATUTOS RBRA SINO LBRA ESTATUTOS RBRA
    (39) DESICION -> SI LPAR EXPRESION RPAR . ENTONCES LBRA ESTATUTOS RBRA

    ENTONCES        shift and go to state 146


state 124

    (40) CONDICIONAL -> MIENTRAS LPAR EXPRESION RPAR . HAZ LBRA ESTATUTOS RBRA

    HAZ             shift and go to state 147


state 125

    (41) NOCONDICIONAL -> DESDE LETRERO LCOR NUM_I . RCOR EQUAL EXPRESION HASTA EXPRESION HACER LBRA ESTATUTOS RBRA

    RCOR            shift and go to state 148


state 126

    (16) FUNCIONES -> FUNCION TIPO LETRERO LPAR OTRA RPAR SCO VARIABLES LBRA . ESTATUTOS REGRESA LPAR EXPRESION RPAR SCO RBRA
    (21) ESTATUTOS -> . EST ESTATUTOS
    (22) ESTATUTOS -> . empty
    (23) EST -> . ASIGNACION
    (24) EST -> . LECTURA
    (25) EST -> . ESCRITURA
    (26) EST -> . DESICION
    (27) EST -> . CONDICIONAL
    (28) EST -> . NOCONDICIONAL
    (29) EST -> . LLAMADA
    (12) empty -> .
    (30) ASIGNACION -> . LETRERO LCOR EXPRESION RCOR EQUAL EXPRESION SCO
    (31) ASIGNACION -> . LETRERO EQUAL EXPRESION SCO
    (32) LECTURA -> . LEE LPAR OTRA RPAR SCO
    (33) ESCRITURA -> . ESCRIBE LPAR WRITE RPAR SCO
    (38) DESICION -> . SI LPAR EXPRESION RPAR ENTONCES LBRA ESTATUTOS RBRA SINO LBRA ESTATUTOS RBRA
    (39) DESICION -> . SI LPAR EXPRESION RPAR ENTONCES LBRA ESTATUTOS RBRA
    (40) CONDICIONAL -> . MIENTRAS LPAR EXPRESION RPAR HAZ LBRA ESTATUTOS RBRA
    (41) NOCONDICIONAL -> . DESDE LETRERO LCOR NUM_I RCOR EQUAL EXPRESION HASTA EXPRESION HACER LBRA ESTATUTOS RBRA
    (42) LLAMADA -> . LETRERO LPAR OTRA RPAR SCO

    REGRESA         reduce using rule 12 (empty -> .)
    LETRERO         shift and go to state 52
    LEE             shift and go to state 53
    ESCRIBE         shift and go to state 54
    SI              shift and go to state 55
    MIENTRAS        shift and go to state 56
    DESDE           shift and go to state 57

    ESTATUTOS                      shift and go to state 149
    EST                            shift and go to state 43
    empty                          shift and go to state 44
    ASIGNACION                     shift and go to state 45
    LECTURA                        shift and go to state 46
    ESCRITURA                      shift and go to state 47
    DESICION                       shift and go to state 48
    CONDICIONAL                    shift and go to state 49
    NOCONDICIONAL                  shift and go to state 50
    LLAMADA                        shift and go to state 51

state 127

    (18) FUNCIONES -> FUNCION TIPO LETRERO LPAR OTRA RPAR SCO LBRA ESTATUTOS . REGRESA LPAR EXPRESION RPAR SCO RBRA

    REGRESA         shift and go to state 150


state 128

    (17) FUNCIONES -> FUNCION VOID LETRERO LPAR OTRA RPAR SCO VARIABLES LBRA . ESTATUTOS RBRA
    (21) ESTATUTOS -> . EST ESTATUTOS
    (22) ESTATUTOS -> . empty
    (23) EST -> . ASIGNACION
    (24) EST -> . LECTURA
    (25) EST -> . ESCRITURA
    (26) EST -> . DESICION
    (27) EST -> . CONDICIONAL
    (28) EST -> . NOCONDICIONAL
    (29) EST -> . LLAMADA
    (12) empty -> .
    (30) ASIGNACION -> . LETRERO LCOR EXPRESION RCOR EQUAL EXPRESION SCO
    (31) ASIGNACION -> . LETRERO EQUAL EXPRESION SCO
    (32) LECTURA -> . LEE LPAR OTRA RPAR SCO
    (33) ESCRITURA -> . ESCRIBE LPAR WRITE RPAR SCO
    (38) DESICION -> . SI LPAR EXPRESION RPAR ENTONCES LBRA ESTATUTOS RBRA SINO LBRA ESTATUTOS RBRA
    (39) DESICION -> . SI LPAR EXPRESION RPAR ENTONCES LBRA ESTATUTOS RBRA
    (40) CONDICIONAL -> . MIENTRAS LPAR EXPRESION RPAR HAZ LBRA ESTATUTOS RBRA
    (41) NOCONDICIONAL -> . DESDE LETRERO LCOR NUM_I RCOR EQUAL EXPRESION HASTA EXPRESION HACER LBRA ESTATUTOS RBRA
    (42) LLAMADA -> . LETRERO LPAR OTRA RPAR SCO

    RBRA            reduce using rule 12 (empty -> .)
    LETRERO         shift and go to state 52
    LEE             shift and go to state 53
    ESCRIBE         shift and go to state 54
    SI              shift and go to state 55
    MIENTRAS        shift and go to state 56
    DESDE           shift and go to state 57

    ESTATUTOS                      shift and go to state 151
    EST                            shift and go to state 43
    empty                          shift and go to state 44
    ASIGNACION                     shift and go to state 45
    LECTURA                        shift and go to state 46
    ESCRITURA                      shift and go to state 47
    DESICION                       shift and go to state 48
    CONDICIONAL                    shift and go to state 49
    NOCONDICIONAL                  shift and go to state 50
    LLAMADA                        shift and go to state 51

state 129

    (19) FUNCIONES -> FUNCION VOID LETRERO LPAR OTRA RPAR SCO LBRA ESTATUTOS . RBRA

    RBRA            shift and go to state 152


state 130

    (59) FACTOR -> LETRERO LPAR EXP2 . RPAR

    RPAR            shift and go to state 153


state 131

    (63) EXP2 -> EXP . EXP2
    (63) EXP2 -> . EXP EXP2
    (64) EXP2 -> . COM EXP2
    (65) EXP2 -> . empty
    (53) EXP -> . TERMINO PLUS TERMINO
    (54) EXP -> . TERMINO MINUS TERMINO
    (55) EXP -> . TERMINO
    (12) empty -> .
    (56) TERMINO -> . FACTOR MULT FACTOR
    (57) TERMINO -> . FACTOR DIV FACTOR
    (58) TERMINO -> . FACTOR
    (59) FACTOR -> . LETRERO LPAR EXP2 RPAR
    (60) FACTOR -> . LETRERO LCOR EXP RCOR
    (61) FACTOR -> . LPAR EXP RPAR
    (62) FACTOR -> . CONSTANTE
    (66) CONSTANTE -> . NUM_I
    (67) CONSTANTE -> . NUM_F
    (68) CONSTANTE -> . CR

    COM             shift and go to state 132
    RPAR            reduce using rule 12 (empty -> .)
    LETRERO         shift and go to state 73
    LPAR            shift and go to state 78
    NUM_I           shift and go to state 80
    NUM_F           shift and go to state 81
    CR              shift and go to state 82

    EXP                            shift and go to state 131
    EXP2                           shift and go to state 154
    empty                          shift and go to state 133
    TERMINO                        shift and go to state 76
    FACTOR                         shift and go to state 77
    CONSTANTE                      shift and go to state 79

state 132

    (64) EXP2 -> COM . EXP2
    (63) EXP2 -> . EXP EXP2
    (64) EXP2 -> . COM EXP2
    (65) EXP2 -> . empty
    (53) EXP -> . TERMINO PLUS TERMINO
    (54) EXP -> . TERMINO MINUS TERMINO
    (55) EXP -> . TERMINO
    (12) empty -> .
    (56) TERMINO -> . FACTOR MULT FACTOR
    (57) TERMINO -> . FACTOR DIV FACTOR
    (58) TERMINO -> . FACTOR
    (59) FACTOR -> . LETRERO LPAR EXP2 RPAR
    (60) FACTOR -> . LETRERO LCOR EXP RCOR
    (61) FACTOR -> . LPAR EXP RPAR
    (62) FACTOR -> . CONSTANTE
    (66) CONSTANTE -> . NUM_I
    (67) CONSTANTE -> . NUM_F
    (68) CONSTANTE -> . CR

    COM             shift and go to state 132
    RPAR            reduce using rule 12 (empty -> .)
    LETRERO         shift and go to state 73
    LPAR            shift and go to state 78
    NUM_I           shift and go to state 80
    NUM_F           shift and go to state 81
    CR              shift and go to state 82

    EXP2                           shift and go to state 155
    EXP                            shift and go to state 131
    empty                          shift and go to state 133
    TERMINO                        shift and go to state 76
    FACTOR                         shift and go to state 77
    CONSTANTE                      shift and go to state 79

state 133

    (65) EXP2 -> empty .

    RPAR            reduce using rule 65 (EXP2 -> empty .)


state 134

    (60) FACTOR -> LETRERO LCOR EXP . RCOR

    RCOR            shift and go to state 156


state 135

    (30) ASIGNACION -> LETRERO LCOR EXPRESION RCOR EQUAL . EXPRESION SCO
    (43) EXPRESION -> . EXP SIM EXP
    (44) EXPRESION -> . EXP
    (53) EXP -> . TERMINO PLUS TERMINO
    (54) EXP -> . TERMINO MINUS TERMINO
    (55) EXP -> . TERMINO
    (56) TERMINO -> . FACTOR MULT FACTOR
    (57) TERMINO -> . FACTOR DIV FACTOR
    (58) TERMINO -> . FACTOR
    (59) FACTOR -> . LETRERO LPAR EXP2 RPAR
    (60) FACTOR -> . LETRERO LCOR EXP RCOR
    (61) FACTOR -> . LPAR EXP RPAR
    (62) FACTOR -> . CONSTANTE
    (66) CONSTANTE -> . NUM_I
    (67) CONSTANTE -> . NUM_F
    (68) CONSTANTE -> . CR

    LETRERO         shift and go to state 73
    LPAR            shift and go to state 78
    NUM_I           shift and go to state 80
    NUM_F           shift and go to state 81
    CR              shift and go to state 82

    EXPRESION                      shift and go to state 157
    EXP                            shift and go to state 75
    TERMINO                        shift and go to state 76
    FACTOR                         shift and go to state 77
    CONSTANTE                      shift and go to state 79

state 136

    (43) EXPRESION -> EXP SIM EXP .

    RCOR            reduce using rule 43 (EXPRESION -> EXP SIM EXP .)
    SCO             reduce using rule 43 (EXPRESION -> EXP SIM EXP .)
    LETRERO         reduce using rule 43 (EXPRESION -> EXP SIM EXP .)
    COM             reduce using rule 43 (EXPRESION -> EXP SIM EXP .)
    LPAR            reduce using rule 43 (EXPRESION -> EXP SIM EXP .)
    NUM_I           reduce using rule 43 (EXPRESION -> EXP SIM EXP .)
    NUM_F           reduce using rule 43 (EXPRESION -> EXP SIM EXP .)
    CR              reduce using rule 43 (EXPRESION -> EXP SIM EXP .)
    RPAR            reduce using rule 43 (EXPRESION -> EXP SIM EXP .)
    HASTA           reduce using rule 43 (EXPRESION -> EXP SIM EXP .)
    HACER           reduce using rule 43 (EXPRESION -> EXP SIM EXP .)


state 137

    (53) EXP -> TERMINO PLUS TERMINO .

    LT              reduce using rule 53 (EXP -> TERMINO PLUS TERMINO .)
    MT              reduce using rule 53 (EXP -> TERMINO PLUS TERMINO .)
    NOTEQUAL        reduce using rule 53 (EXP -> TERMINO PLUS TERMINO .)
    ELT             reduce using rule 53 (EXP -> TERMINO PLUS TERMINO .)
    EMT             reduce using rule 53 (EXP -> TERMINO PLUS TERMINO .)
    EEQ             reduce using rule 53 (EXP -> TERMINO PLUS TERMINO .)
    AND             reduce using rule 53 (EXP -> TERMINO PLUS TERMINO .)
    OR              reduce using rule 53 (EXP -> TERMINO PLUS TERMINO .)
    RCOR            reduce using rule 53 (EXP -> TERMINO PLUS TERMINO .)
    SCO             reduce using rule 53 (EXP -> TERMINO PLUS TERMINO .)
    LETRERO         reduce using rule 53 (EXP -> TERMINO PLUS TERMINO .)
    COM             reduce using rule 53 (EXP -> TERMINO PLUS TERMINO .)
    LPAR            reduce using rule 53 (EXP -> TERMINO PLUS TERMINO .)
    NUM_I           reduce using rule 53 (EXP -> TERMINO PLUS TERMINO .)
    NUM_F           reduce using rule 53 (EXP -> TERMINO PLUS TERMINO .)
    CR              reduce using rule 53 (EXP -> TERMINO PLUS TERMINO .)
    RPAR            reduce using rule 53 (EXP -> TERMINO PLUS TERMINO .)
    HASTA           reduce using rule 53 (EXP -> TERMINO PLUS TERMINO .)
    HACER           reduce using rule 53 (EXP -> TERMINO PLUS TERMINO .)


state 138

    (54) EXP -> TERMINO MINUS TERMINO .

    LT              reduce using rule 54 (EXP -> TERMINO MINUS TERMINO .)
    MT              reduce using rule 54 (EXP -> TERMINO MINUS TERMINO .)
    NOTEQUAL        reduce using rule 54 (EXP -> TERMINO MINUS TERMINO .)
    ELT             reduce using rule 54 (EXP -> TERMINO MINUS TERMINO .)
    EMT             reduce using rule 54 (EXP -> TERMINO MINUS TERMINO .)
    EEQ             reduce using rule 54 (EXP -> TERMINO MINUS TERMINO .)
    AND             reduce using rule 54 (EXP -> TERMINO MINUS TERMINO .)
    OR              reduce using rule 54 (EXP -> TERMINO MINUS TERMINO .)
    RCOR            reduce using rule 54 (EXP -> TERMINO MINUS TERMINO .)
    SCO             reduce using rule 54 (EXP -> TERMINO MINUS TERMINO .)
    LETRERO         reduce using rule 54 (EXP -> TERMINO MINUS TERMINO .)
    COM             reduce using rule 54 (EXP -> TERMINO MINUS TERMINO .)
    LPAR            reduce using rule 54 (EXP -> TERMINO MINUS TERMINO .)
    NUM_I           reduce using rule 54 (EXP -> TERMINO MINUS TERMINO .)
    NUM_F           reduce using rule 54 (EXP -> TERMINO MINUS TERMINO .)
    CR              reduce using rule 54 (EXP -> TERMINO MINUS TERMINO .)
    RPAR            reduce using rule 54 (EXP -> TERMINO MINUS TERMINO .)
    HASTA           reduce using rule 54 (EXP -> TERMINO MINUS TERMINO .)
    HACER           reduce using rule 54 (EXP -> TERMINO MINUS TERMINO .)


state 139

    (56) TERMINO -> FACTOR MULT FACTOR .

    PLUS            reduce using rule 56 (TERMINO -> FACTOR MULT FACTOR .)
    MINUS           reduce using rule 56 (TERMINO -> FACTOR MULT FACTOR .)
    LT              reduce using rule 56 (TERMINO -> FACTOR MULT FACTOR .)
    MT              reduce using rule 56 (TERMINO -> FACTOR MULT FACTOR .)
    NOTEQUAL        reduce using rule 56 (TERMINO -> FACTOR MULT FACTOR .)
    ELT             reduce using rule 56 (TERMINO -> FACTOR MULT FACTOR .)
    EMT             reduce using rule 56 (TERMINO -> FACTOR MULT FACTOR .)
    EEQ             reduce using rule 56 (TERMINO -> FACTOR MULT FACTOR .)
    AND             reduce using rule 56 (TERMINO -> FACTOR MULT FACTOR .)
    OR              reduce using rule 56 (TERMINO -> FACTOR MULT FACTOR .)
    RCOR            reduce using rule 56 (TERMINO -> FACTOR MULT FACTOR .)
    SCO             reduce using rule 56 (TERMINO -> FACTOR MULT FACTOR .)
    LETRERO         reduce using rule 56 (TERMINO -> FACTOR MULT FACTOR .)
    COM             reduce using rule 56 (TERMINO -> FACTOR MULT FACTOR .)
    LPAR            reduce using rule 56 (TERMINO -> FACTOR MULT FACTOR .)
    NUM_I           reduce using rule 56 (TERMINO -> FACTOR MULT FACTOR .)
    NUM_F           reduce using rule 56 (TERMINO -> FACTOR MULT FACTOR .)
    CR              reduce using rule 56 (TERMINO -> FACTOR MULT FACTOR .)
    RPAR            reduce using rule 56 (TERMINO -> FACTOR MULT FACTOR .)
    HASTA           reduce using rule 56 (TERMINO -> FACTOR MULT FACTOR .)
    HACER           reduce using rule 56 (TERMINO -> FACTOR MULT FACTOR .)


state 140

    (57) TERMINO -> FACTOR DIV FACTOR .

    PLUS            reduce using rule 57 (TERMINO -> FACTOR DIV FACTOR .)
    MINUS           reduce using rule 57 (TERMINO -> FACTOR DIV FACTOR .)
    LT              reduce using rule 57 (TERMINO -> FACTOR DIV FACTOR .)
    MT              reduce using rule 57 (TERMINO -> FACTOR DIV FACTOR .)
    NOTEQUAL        reduce using rule 57 (TERMINO -> FACTOR DIV FACTOR .)
    ELT             reduce using rule 57 (TERMINO -> FACTOR DIV FACTOR .)
    EMT             reduce using rule 57 (TERMINO -> FACTOR DIV FACTOR .)
    EEQ             reduce using rule 57 (TERMINO -> FACTOR DIV FACTOR .)
    AND             reduce using rule 57 (TERMINO -> FACTOR DIV FACTOR .)
    OR              reduce using rule 57 (TERMINO -> FACTOR DIV FACTOR .)
    RCOR            reduce using rule 57 (TERMINO -> FACTOR DIV FACTOR .)
    SCO             reduce using rule 57 (TERMINO -> FACTOR DIV FACTOR .)
    LETRERO         reduce using rule 57 (TERMINO -> FACTOR DIV FACTOR .)
    COM             reduce using rule 57 (TERMINO -> FACTOR DIV FACTOR .)
    LPAR            reduce using rule 57 (TERMINO -> FACTOR DIV FACTOR .)
    NUM_I           reduce using rule 57 (TERMINO -> FACTOR DIV FACTOR .)
    NUM_F           reduce using rule 57 (TERMINO -> FACTOR DIV FACTOR .)
    CR              reduce using rule 57 (TERMINO -> FACTOR DIV FACTOR .)
    RPAR            reduce using rule 57 (TERMINO -> FACTOR DIV FACTOR .)
    HASTA           reduce using rule 57 (TERMINO -> FACTOR DIV FACTOR .)
    HACER           reduce using rule 57 (TERMINO -> FACTOR DIV FACTOR .)


state 141

    (61) FACTOR -> LPAR EXP RPAR .

    MULT            reduce using rule 61 (FACTOR -> LPAR EXP RPAR .)
    DIV             reduce using rule 61 (FACTOR -> LPAR EXP RPAR .)
    PLUS            reduce using rule 61 (FACTOR -> LPAR EXP RPAR .)
    MINUS           reduce using rule 61 (FACTOR -> LPAR EXP RPAR .)
    LT              reduce using rule 61 (FACTOR -> LPAR EXP RPAR .)
    MT              reduce using rule 61 (FACTOR -> LPAR EXP RPAR .)
    NOTEQUAL        reduce using rule 61 (FACTOR -> LPAR EXP RPAR .)
    ELT             reduce using rule 61 (FACTOR -> LPAR EXP RPAR .)
    EMT             reduce using rule 61 (FACTOR -> LPAR EXP RPAR .)
    EEQ             reduce using rule 61 (FACTOR -> LPAR EXP RPAR .)
    AND             reduce using rule 61 (FACTOR -> LPAR EXP RPAR .)
    OR              reduce using rule 61 (FACTOR -> LPAR EXP RPAR .)
    RCOR            reduce using rule 61 (FACTOR -> LPAR EXP RPAR .)
    SCO             reduce using rule 61 (FACTOR -> LPAR EXP RPAR .)
    LETRERO         reduce using rule 61 (FACTOR -> LPAR EXP RPAR .)
    COM             reduce using rule 61 (FACTOR -> LPAR EXP RPAR .)
    LPAR            reduce using rule 61 (FACTOR -> LPAR EXP RPAR .)
    NUM_I           reduce using rule 61 (FACTOR -> LPAR EXP RPAR .)
    NUM_F           reduce using rule 61 (FACTOR -> LPAR EXP RPAR .)
    CR              reduce using rule 61 (FACTOR -> LPAR EXP RPAR .)
    RPAR            reduce using rule 61 (FACTOR -> LPAR EXP RPAR .)
    HASTA           reduce using rule 61 (FACTOR -> LPAR EXP RPAR .)
    HACER           reduce using rule 61 (FACTOR -> LPAR EXP RPAR .)


state 142

    (42) LLAMADA -> LETRERO LPAR OTRA RPAR SCO .

    LETRERO         reduce using rule 42 (LLAMADA -> LETRERO LPAR OTRA RPAR SCO .)
    LEE             reduce using rule 42 (LLAMADA -> LETRERO LPAR OTRA RPAR SCO .)
    ESCRIBE         reduce using rule 42 (LLAMADA -> LETRERO LPAR OTRA RPAR SCO .)
    SI              reduce using rule 42 (LLAMADA -> LETRERO LPAR OTRA RPAR SCO .)
    MIENTRAS        reduce using rule 42 (LLAMADA -> LETRERO LPAR OTRA RPAR SCO .)
    DESDE           reduce using rule 42 (LLAMADA -> LETRERO LPAR OTRA RPAR SCO .)
    RBRA            reduce using rule 42 (LLAMADA -> LETRERO LPAR OTRA RPAR SCO .)
    REGRESA         reduce using rule 42 (LLAMADA -> LETRERO LPAR OTRA RPAR SCO .)


state 143

    (32) LECTURA -> LEE LPAR OTRA RPAR SCO .

    LETRERO         reduce using rule 32 (LECTURA -> LEE LPAR OTRA RPAR SCO .)
    LEE             reduce using rule 32 (LECTURA -> LEE LPAR OTRA RPAR SCO .)
    ESCRIBE         reduce using rule 32 (LECTURA -> LEE LPAR OTRA RPAR SCO .)
    SI              reduce using rule 32 (LECTURA -> LEE LPAR OTRA RPAR SCO .)
    MIENTRAS        reduce using rule 32 (LECTURA -> LEE LPAR OTRA RPAR SCO .)
    DESDE           reduce using rule 32 (LECTURA -> LEE LPAR OTRA RPAR SCO .)
    RBRA            reduce using rule 32 (LECTURA -> LEE LPAR OTRA RPAR SCO .)
    REGRESA         reduce using rule 32 (LECTURA -> LEE LPAR OTRA RPAR SCO .)


state 144

    (33) ESCRITURA -> ESCRIBE LPAR WRITE RPAR SCO .

    LETRERO         reduce using rule 33 (ESCRITURA -> ESCRIBE LPAR WRITE RPAR SCO .)
    LEE             reduce using rule 33 (ESCRITURA -> ESCRIBE LPAR WRITE RPAR SCO .)
    ESCRIBE         reduce using rule 33 (ESCRITURA -> ESCRIBE LPAR WRITE RPAR SCO .)
    SI              reduce using rule 33 (ESCRITURA -> ESCRIBE LPAR WRITE RPAR SCO .)
    MIENTRAS        reduce using rule 33 (ESCRITURA -> ESCRIBE LPAR WRITE RPAR SCO .)
    DESDE           reduce using rule 33 (ESCRITURA -> ESCRIBE LPAR WRITE RPAR SCO .)
    RBRA            reduce using rule 33 (ESCRITURA -> ESCRIBE LPAR WRITE RPAR SCO .)
    REGRESA         reduce using rule 33 (ESCRITURA -> ESCRIBE LPAR WRITE RPAR SCO .)


state 145

    (61) FACTOR -> LPAR EXP . RPAR
    (63) EXP2 -> EXP . EXP2
    (63) EXP2 -> . EXP EXP2
    (64) EXP2 -> . COM EXP2
    (65) EXP2 -> . empty
    (53) EXP -> . TERMINO PLUS TERMINO
    (54) EXP -> . TERMINO MINUS TERMINO
    (55) EXP -> . TERMINO
    (12) empty -> .
    (56) TERMINO -> . FACTOR MULT FACTOR
    (57) TERMINO -> . FACTOR DIV FACTOR
    (58) TERMINO -> . FACTOR
    (59) FACTOR -> . LETRERO LPAR EXP2 RPAR
    (60) FACTOR -> . LETRERO LCOR EXP RCOR
    (61) FACTOR -> . LPAR EXP RPAR
    (62) FACTOR -> . CONSTANTE
    (66) CONSTANTE -> . NUM_I
    (67) CONSTANTE -> . NUM_F
    (68) CONSTANTE -> . CR

  ! shift/reduce conflict for RPAR resolved as shift
    RPAR            shift and go to state 141
    COM             shift and go to state 132
    LETRERO         shift and go to state 73
    LPAR            shift and go to state 78
    NUM_I           shift and go to state 80
    NUM_F           shift and go to state 81
    CR              shift and go to state 82

  ! RPAR            [ reduce using rule 12 (empty -> .) ]

    EXP                            shift and go to state 131
    EXP2                           shift and go to state 154
    empty                          shift and go to state 133
    TERMINO                        shift and go to state 76
    FACTOR                         shift and go to state 77
    CONSTANTE                      shift and go to state 79

state 146

    (38) DESICION -> SI LPAR EXPRESION RPAR ENTONCES . LBRA ESTATUTOS RBRA SINO LBRA ESTATUTOS RBRA
    (39) DESICION -> SI LPAR EXPRESION RPAR ENTONCES . LBRA ESTATUTOS RBRA

    LBRA            shift and go to state 158


state 147

    (40) CONDICIONAL -> MIENTRAS LPAR EXPRESION RPAR HAZ . LBRA ESTATUTOS RBRA

    LBRA            shift and go to state 159


state 148

    (41) NOCONDICIONAL -> DESDE LETRERO LCOR NUM_I RCOR . EQUAL EXPRESION HASTA EXPRESION HACER LBRA ESTATUTOS RBRA

    EQUAL           shift and go to state 160


state 149

    (16) FUNCIONES -> FUNCION TIPO LETRERO LPAR OTRA RPAR SCO VARIABLES LBRA ESTATUTOS . REGRESA LPAR EXPRESION RPAR SCO RBRA

    REGRESA         shift and go to state 161


state 150

    (18) FUNCIONES -> FUNCION TIPO LETRERO LPAR OTRA RPAR SCO LBRA ESTATUTOS REGRESA . LPAR EXPRESION RPAR SCO RBRA

    LPAR            shift and go to state 162


state 151

    (17) FUNCIONES -> FUNCION VOID LETRERO LPAR OTRA RPAR SCO VARIABLES LBRA ESTATUTOS . RBRA

    RBRA            shift and go to state 163


state 152

    (19) FUNCIONES -> FUNCION VOID LETRERO LPAR OTRA RPAR SCO LBRA ESTATUTOS RBRA .

    PRINCIPAL       reduce using rule 19 (FUNCIONES -> FUNCION VOID LETRERO LPAR OTRA RPAR SCO LBRA ESTATUTOS RBRA .)


state 153

    (59) FACTOR -> LETRERO LPAR EXP2 RPAR .

    MULT            reduce using rule 59 (FACTOR -> LETRERO LPAR EXP2 RPAR .)
    DIV             reduce using rule 59 (FACTOR -> LETRERO LPAR EXP2 RPAR .)
    PLUS            reduce using rule 59 (FACTOR -> LETRERO LPAR EXP2 RPAR .)
    MINUS           reduce using rule 59 (FACTOR -> LETRERO LPAR EXP2 RPAR .)
    LT              reduce using rule 59 (FACTOR -> LETRERO LPAR EXP2 RPAR .)
    MT              reduce using rule 59 (FACTOR -> LETRERO LPAR EXP2 RPAR .)
    NOTEQUAL        reduce using rule 59 (FACTOR -> LETRERO LPAR EXP2 RPAR .)
    ELT             reduce using rule 59 (FACTOR -> LETRERO LPAR EXP2 RPAR .)
    EMT             reduce using rule 59 (FACTOR -> LETRERO LPAR EXP2 RPAR .)
    EEQ             reduce using rule 59 (FACTOR -> LETRERO LPAR EXP2 RPAR .)
    AND             reduce using rule 59 (FACTOR -> LETRERO LPAR EXP2 RPAR .)
    OR              reduce using rule 59 (FACTOR -> LETRERO LPAR EXP2 RPAR .)
    RCOR            reduce using rule 59 (FACTOR -> LETRERO LPAR EXP2 RPAR .)
    SCO             reduce using rule 59 (FACTOR -> LETRERO LPAR EXP2 RPAR .)
    LETRERO         reduce using rule 59 (FACTOR -> LETRERO LPAR EXP2 RPAR .)
    COM             reduce using rule 59 (FACTOR -> LETRERO LPAR EXP2 RPAR .)
    LPAR            reduce using rule 59 (FACTOR -> LETRERO LPAR EXP2 RPAR .)
    NUM_I           reduce using rule 59 (FACTOR -> LETRERO LPAR EXP2 RPAR .)
    NUM_F           reduce using rule 59 (FACTOR -> LETRERO LPAR EXP2 RPAR .)
    CR              reduce using rule 59 (FACTOR -> LETRERO LPAR EXP2 RPAR .)
    RPAR            reduce using rule 59 (FACTOR -> LETRERO LPAR EXP2 RPAR .)
    HASTA           reduce using rule 59 (FACTOR -> LETRERO LPAR EXP2 RPAR .)
    HACER           reduce using rule 59 (FACTOR -> LETRERO LPAR EXP2 RPAR .)


state 154

    (63) EXP2 -> EXP EXP2 .

    RPAR            reduce using rule 63 (EXP2 -> EXP EXP2 .)


state 155

    (64) EXP2 -> COM EXP2 .

    RPAR            reduce using rule 64 (EXP2 -> COM EXP2 .)


state 156

    (60) FACTOR -> LETRERO LCOR EXP RCOR .

    MULT            reduce using rule 60 (FACTOR -> LETRERO LCOR EXP RCOR .)
    DIV             reduce using rule 60 (FACTOR -> LETRERO LCOR EXP RCOR .)
    PLUS            reduce using rule 60 (FACTOR -> LETRERO LCOR EXP RCOR .)
    MINUS           reduce using rule 60 (FACTOR -> LETRERO LCOR EXP RCOR .)
    LT              reduce using rule 60 (FACTOR -> LETRERO LCOR EXP RCOR .)
    MT              reduce using rule 60 (FACTOR -> LETRERO LCOR EXP RCOR .)
    NOTEQUAL        reduce using rule 60 (FACTOR -> LETRERO LCOR EXP RCOR .)
    ELT             reduce using rule 60 (FACTOR -> LETRERO LCOR EXP RCOR .)
    EMT             reduce using rule 60 (FACTOR -> LETRERO LCOR EXP RCOR .)
    EEQ             reduce using rule 60 (FACTOR -> LETRERO LCOR EXP RCOR .)
    AND             reduce using rule 60 (FACTOR -> LETRERO LCOR EXP RCOR .)
    OR              reduce using rule 60 (FACTOR -> LETRERO LCOR EXP RCOR .)
    RCOR            reduce using rule 60 (FACTOR -> LETRERO LCOR EXP RCOR .)
    SCO             reduce using rule 60 (FACTOR -> LETRERO LCOR EXP RCOR .)
    LETRERO         reduce using rule 60 (FACTOR -> LETRERO LCOR EXP RCOR .)
    COM             reduce using rule 60 (FACTOR -> LETRERO LCOR EXP RCOR .)
    LPAR            reduce using rule 60 (FACTOR -> LETRERO LCOR EXP RCOR .)
    NUM_I           reduce using rule 60 (FACTOR -> LETRERO LCOR EXP RCOR .)
    NUM_F           reduce using rule 60 (FACTOR -> LETRERO LCOR EXP RCOR .)
    CR              reduce using rule 60 (FACTOR -> LETRERO LCOR EXP RCOR .)
    RPAR            reduce using rule 60 (FACTOR -> LETRERO LCOR EXP RCOR .)
    HASTA           reduce using rule 60 (FACTOR -> LETRERO LCOR EXP RCOR .)
    HACER           reduce using rule 60 (FACTOR -> LETRERO LCOR EXP RCOR .)


state 157

    (30) ASIGNACION -> LETRERO LCOR EXPRESION RCOR EQUAL EXPRESION . SCO

    SCO             shift and go to state 164


state 158

    (38) DESICION -> SI LPAR EXPRESION RPAR ENTONCES LBRA . ESTATUTOS RBRA SINO LBRA ESTATUTOS RBRA
    (39) DESICION -> SI LPAR EXPRESION RPAR ENTONCES LBRA . ESTATUTOS RBRA
    (21) ESTATUTOS -> . EST ESTATUTOS
    (22) ESTATUTOS -> . empty
    (23) EST -> . ASIGNACION
    (24) EST -> . LECTURA
    (25) EST -> . ESCRITURA
    (26) EST -> . DESICION
    (27) EST -> . CONDICIONAL
    (28) EST -> . NOCONDICIONAL
    (29) EST -> . LLAMADA
    (12) empty -> .
    (30) ASIGNACION -> . LETRERO LCOR EXPRESION RCOR EQUAL EXPRESION SCO
    (31) ASIGNACION -> . LETRERO EQUAL EXPRESION SCO
    (32) LECTURA -> . LEE LPAR OTRA RPAR SCO
    (33) ESCRITURA -> . ESCRIBE LPAR WRITE RPAR SCO
    (38) DESICION -> . SI LPAR EXPRESION RPAR ENTONCES LBRA ESTATUTOS RBRA SINO LBRA ESTATUTOS RBRA
    (39) DESICION -> . SI LPAR EXPRESION RPAR ENTONCES LBRA ESTATUTOS RBRA
    (40) CONDICIONAL -> . MIENTRAS LPAR EXPRESION RPAR HAZ LBRA ESTATUTOS RBRA
    (41) NOCONDICIONAL -> . DESDE LETRERO LCOR NUM_I RCOR EQUAL EXPRESION HASTA EXPRESION HACER LBRA ESTATUTOS RBRA
    (42) LLAMADA -> . LETRERO LPAR OTRA RPAR SCO

    RBRA            reduce using rule 12 (empty -> .)
    LETRERO         shift and go to state 52
    LEE             shift and go to state 53
    ESCRIBE         shift and go to state 54
    SI              shift and go to state 55
    MIENTRAS        shift and go to state 56
    DESDE           shift and go to state 57

    ESTATUTOS                      shift and go to state 165
    EST                            shift and go to state 43
    empty                          shift and go to state 44
    ASIGNACION                     shift and go to state 45
    LECTURA                        shift and go to state 46
    ESCRITURA                      shift and go to state 47
    DESICION                       shift and go to state 48
    CONDICIONAL                    shift and go to state 49
    NOCONDICIONAL                  shift and go to state 50
    LLAMADA                        shift and go to state 51

state 159

    (40) CONDICIONAL -> MIENTRAS LPAR EXPRESION RPAR HAZ LBRA . ESTATUTOS RBRA
    (21) ESTATUTOS -> . EST ESTATUTOS
    (22) ESTATUTOS -> . empty
    (23) EST -> . ASIGNACION
    (24) EST -> . LECTURA
    (25) EST -> . ESCRITURA
    (26) EST -> . DESICION
    (27) EST -> . CONDICIONAL
    (28) EST -> . NOCONDICIONAL
    (29) EST -> . LLAMADA
    (12) empty -> .
    (30) ASIGNACION -> . LETRERO LCOR EXPRESION RCOR EQUAL EXPRESION SCO
    (31) ASIGNACION -> . LETRERO EQUAL EXPRESION SCO
    (32) LECTURA -> . LEE LPAR OTRA RPAR SCO
    (33) ESCRITURA -> . ESCRIBE LPAR WRITE RPAR SCO
    (38) DESICION -> . SI LPAR EXPRESION RPAR ENTONCES LBRA ESTATUTOS RBRA SINO LBRA ESTATUTOS RBRA
    (39) DESICION -> . SI LPAR EXPRESION RPAR ENTONCES LBRA ESTATUTOS RBRA
    (40) CONDICIONAL -> . MIENTRAS LPAR EXPRESION RPAR HAZ LBRA ESTATUTOS RBRA
    (41) NOCONDICIONAL -> . DESDE LETRERO LCOR NUM_I RCOR EQUAL EXPRESION HASTA EXPRESION HACER LBRA ESTATUTOS RBRA
    (42) LLAMADA -> . LETRERO LPAR OTRA RPAR SCO

    RBRA            reduce using rule 12 (empty -> .)
    LETRERO         shift and go to state 52
    LEE             shift and go to state 53
    ESCRIBE         shift and go to state 54
    SI              shift and go to state 55
    MIENTRAS        shift and go to state 56
    DESDE           shift and go to state 57

    ESTATUTOS                      shift and go to state 166
    EST                            shift and go to state 43
    empty                          shift and go to state 44
    ASIGNACION                     shift and go to state 45
    LECTURA                        shift and go to state 46
    ESCRITURA                      shift and go to state 47
    DESICION                       shift and go to state 48
    CONDICIONAL                    shift and go to state 49
    NOCONDICIONAL                  shift and go to state 50
    LLAMADA                        shift and go to state 51

state 160

    (41) NOCONDICIONAL -> DESDE LETRERO LCOR NUM_I RCOR EQUAL . EXPRESION HASTA EXPRESION HACER LBRA ESTATUTOS RBRA
    (43) EXPRESION -> . EXP SIM EXP
    (44) EXPRESION -> . EXP
    (53) EXP -> . TERMINO PLUS TERMINO
    (54) EXP -> . TERMINO MINUS TERMINO
    (55) EXP -> . TERMINO
    (56) TERMINO -> . FACTOR MULT FACTOR
    (57) TERMINO -> . FACTOR DIV FACTOR
    (58) TERMINO -> . FACTOR
    (59) FACTOR -> . LETRERO LPAR EXP2 RPAR
    (60) FACTOR -> . LETRERO LCOR EXP RCOR
    (61) FACTOR -> . LPAR EXP RPAR
    (62) FACTOR -> . CONSTANTE
    (66) CONSTANTE -> . NUM_I
    (67) CONSTANTE -> . NUM_F
    (68) CONSTANTE -> . CR

    LETRERO         shift and go to state 73
    LPAR            shift and go to state 78
    NUM_I           shift and go to state 80
    NUM_F           shift and go to state 81
    CR              shift and go to state 82

    EXPRESION                      shift and go to state 167
    EXP                            shift and go to state 75
    TERMINO                        shift and go to state 76
    FACTOR                         shift and go to state 77
    CONSTANTE                      shift and go to state 79

state 161

    (16) FUNCIONES -> FUNCION TIPO LETRERO LPAR OTRA RPAR SCO VARIABLES LBRA ESTATUTOS REGRESA . LPAR EXPRESION RPAR SCO RBRA

    LPAR            shift and go to state 168


state 162

    (18) FUNCIONES -> FUNCION TIPO LETRERO LPAR OTRA RPAR SCO LBRA ESTATUTOS REGRESA LPAR . EXPRESION RPAR SCO RBRA
    (43) EXPRESION -> . EXP SIM EXP
    (44) EXPRESION -> . EXP
    (53) EXP -> . TERMINO PLUS TERMINO
    (54) EXP -> . TERMINO MINUS TERMINO
    (55) EXP -> . TERMINO
    (56) TERMINO -> . FACTOR MULT FACTOR
    (57) TERMINO -> . FACTOR DIV FACTOR
    (58) TERMINO -> . FACTOR
    (59) FACTOR -> . LETRERO LPAR EXP2 RPAR
    (60) FACTOR -> . LETRERO LCOR EXP RCOR
    (61) FACTOR -> . LPAR EXP RPAR
    (62) FACTOR -> . CONSTANTE
    (66) CONSTANTE -> . NUM_I
    (67) CONSTANTE -> . NUM_F
    (68) CONSTANTE -> . CR

    LETRERO         shift and go to state 73
    LPAR            shift and go to state 78
    NUM_I           shift and go to state 80
    NUM_F           shift and go to state 81
    CR              shift and go to state 82

    EXPRESION                      shift and go to state 169
    EXP                            shift and go to state 75
    TERMINO                        shift and go to state 76
    FACTOR                         shift and go to state 77
    CONSTANTE                      shift and go to state 79

state 163

    (17) FUNCIONES -> FUNCION VOID LETRERO LPAR OTRA RPAR SCO VARIABLES LBRA ESTATUTOS RBRA .

    PRINCIPAL       reduce using rule 17 (FUNCIONES -> FUNCION VOID LETRERO LPAR OTRA RPAR SCO VARIABLES LBRA ESTATUTOS RBRA .)


state 164

    (30) ASIGNACION -> LETRERO LCOR EXPRESION RCOR EQUAL EXPRESION SCO .

    LETRERO         reduce using rule 30 (ASIGNACION -> LETRERO LCOR EXPRESION RCOR EQUAL EXPRESION SCO .)
    LEE             reduce using rule 30 (ASIGNACION -> LETRERO LCOR EXPRESION RCOR EQUAL EXPRESION SCO .)
    ESCRIBE         reduce using rule 30 (ASIGNACION -> LETRERO LCOR EXPRESION RCOR EQUAL EXPRESION SCO .)
    SI              reduce using rule 30 (ASIGNACION -> LETRERO LCOR EXPRESION RCOR EQUAL EXPRESION SCO .)
    MIENTRAS        reduce using rule 30 (ASIGNACION -> LETRERO LCOR EXPRESION RCOR EQUAL EXPRESION SCO .)
    DESDE           reduce using rule 30 (ASIGNACION -> LETRERO LCOR EXPRESION RCOR EQUAL EXPRESION SCO .)
    RBRA            reduce using rule 30 (ASIGNACION -> LETRERO LCOR EXPRESION RCOR EQUAL EXPRESION SCO .)
    REGRESA         reduce using rule 30 (ASIGNACION -> LETRERO LCOR EXPRESION RCOR EQUAL EXPRESION SCO .)


state 165

    (38) DESICION -> SI LPAR EXPRESION RPAR ENTONCES LBRA ESTATUTOS . RBRA SINO LBRA ESTATUTOS RBRA
    (39) DESICION -> SI LPAR EXPRESION RPAR ENTONCES LBRA ESTATUTOS . RBRA

    RBRA            shift and go to state 170


state 166

    (40) CONDICIONAL -> MIENTRAS LPAR EXPRESION RPAR HAZ LBRA ESTATUTOS . RBRA

    RBRA            shift and go to state 171


state 167

    (41) NOCONDICIONAL -> DESDE LETRERO LCOR NUM_I RCOR EQUAL EXPRESION . HASTA EXPRESION HACER LBRA ESTATUTOS RBRA

    HASTA           shift and go to state 172


state 168

    (16) FUNCIONES -> FUNCION TIPO LETRERO LPAR OTRA RPAR SCO VARIABLES LBRA ESTATUTOS REGRESA LPAR . EXPRESION RPAR SCO RBRA
    (43) EXPRESION -> . EXP SIM EXP
    (44) EXPRESION -> . EXP
    (53) EXP -> . TERMINO PLUS TERMINO
    (54) EXP -> . TERMINO MINUS TERMINO
    (55) EXP -> . TERMINO
    (56) TERMINO -> . FACTOR MULT FACTOR
    (57) TERMINO -> . FACTOR DIV FACTOR
    (58) TERMINO -> . FACTOR
    (59) FACTOR -> . LETRERO LPAR EXP2 RPAR
    (60) FACTOR -> . LETRERO LCOR EXP RCOR
    (61) FACTOR -> . LPAR EXP RPAR
    (62) FACTOR -> . CONSTANTE
    (66) CONSTANTE -> . NUM_I
    (67) CONSTANTE -> . NUM_F
    (68) CONSTANTE -> . CR

    LETRERO         shift and go to state 73
    LPAR            shift and go to state 78
    NUM_I           shift and go to state 80
    NUM_F           shift and go to state 81
    CR              shift and go to state 82

    EXPRESION                      shift and go to state 173
    EXP                            shift and go to state 75
    TERMINO                        shift and go to state 76
    FACTOR                         shift and go to state 77
    CONSTANTE                      shift and go to state 79

state 169

    (18) FUNCIONES -> FUNCION TIPO LETRERO LPAR OTRA RPAR SCO LBRA ESTATUTOS REGRESA LPAR EXPRESION . RPAR SCO RBRA

    RPAR            shift and go to state 174


state 170

    (38) DESICION -> SI LPAR EXPRESION RPAR ENTONCES LBRA ESTATUTOS RBRA . SINO LBRA ESTATUTOS RBRA
    (39) DESICION -> SI LPAR EXPRESION RPAR ENTONCES LBRA ESTATUTOS RBRA .

    SINO            shift and go to state 175
    LETRERO         reduce using rule 39 (DESICION -> SI LPAR EXPRESION RPAR ENTONCES LBRA ESTATUTOS RBRA .)
    LEE             reduce using rule 39 (DESICION -> SI LPAR EXPRESION RPAR ENTONCES LBRA ESTATUTOS RBRA .)
    ESCRIBE         reduce using rule 39 (DESICION -> SI LPAR EXPRESION RPAR ENTONCES LBRA ESTATUTOS RBRA .)
    SI              reduce using rule 39 (DESICION -> SI LPAR EXPRESION RPAR ENTONCES LBRA ESTATUTOS RBRA .)
    MIENTRAS        reduce using rule 39 (DESICION -> SI LPAR EXPRESION RPAR ENTONCES LBRA ESTATUTOS RBRA .)
    DESDE           reduce using rule 39 (DESICION -> SI LPAR EXPRESION RPAR ENTONCES LBRA ESTATUTOS RBRA .)
    RBRA            reduce using rule 39 (DESICION -> SI LPAR EXPRESION RPAR ENTONCES LBRA ESTATUTOS RBRA .)
    REGRESA         reduce using rule 39 (DESICION -> SI LPAR EXPRESION RPAR ENTONCES LBRA ESTATUTOS RBRA .)


state 171

    (40) CONDICIONAL -> MIENTRAS LPAR EXPRESION RPAR HAZ LBRA ESTATUTOS RBRA .

    LETRERO         reduce using rule 40 (CONDICIONAL -> MIENTRAS LPAR EXPRESION RPAR HAZ LBRA ESTATUTOS RBRA .)
    LEE             reduce using rule 40 (CONDICIONAL -> MIENTRAS LPAR EXPRESION RPAR HAZ LBRA ESTATUTOS RBRA .)
    ESCRIBE         reduce using rule 40 (CONDICIONAL -> MIENTRAS LPAR EXPRESION RPAR HAZ LBRA ESTATUTOS RBRA .)
    SI              reduce using rule 40 (CONDICIONAL -> MIENTRAS LPAR EXPRESION RPAR HAZ LBRA ESTATUTOS RBRA .)
    MIENTRAS        reduce using rule 40 (CONDICIONAL -> MIENTRAS LPAR EXPRESION RPAR HAZ LBRA ESTATUTOS RBRA .)
    DESDE           reduce using rule 40 (CONDICIONAL -> MIENTRAS LPAR EXPRESION RPAR HAZ LBRA ESTATUTOS RBRA .)
    RBRA            reduce using rule 40 (CONDICIONAL -> MIENTRAS LPAR EXPRESION RPAR HAZ LBRA ESTATUTOS RBRA .)
    REGRESA         reduce using rule 40 (CONDICIONAL -> MIENTRAS LPAR EXPRESION RPAR HAZ LBRA ESTATUTOS RBRA .)


state 172

    (41) NOCONDICIONAL -> DESDE LETRERO LCOR NUM_I RCOR EQUAL EXPRESION HASTA . EXPRESION HACER LBRA ESTATUTOS RBRA
    (43) EXPRESION -> . EXP SIM EXP
    (44) EXPRESION -> . EXP
    (53) EXP -> . TERMINO PLUS TERMINO
    (54) EXP -> . TERMINO MINUS TERMINO
    (55) EXP -> . TERMINO
    (56) TERMINO -> . FACTOR MULT FACTOR
    (57) TERMINO -> . FACTOR DIV FACTOR
    (58) TERMINO -> . FACTOR
    (59) FACTOR -> . LETRERO LPAR EXP2 RPAR
    (60) FACTOR -> . LETRERO LCOR EXP RCOR
    (61) FACTOR -> . LPAR EXP RPAR
    (62) FACTOR -> . CONSTANTE
    (66) CONSTANTE -> . NUM_I
    (67) CONSTANTE -> . NUM_F
    (68) CONSTANTE -> . CR

    LETRERO         shift and go to state 73
    LPAR            shift and go to state 78
    NUM_I           shift and go to state 80
    NUM_F           shift and go to state 81
    CR              shift and go to state 82

    EXPRESION                      shift and go to state 176
    EXP                            shift and go to state 75
    TERMINO                        shift and go to state 76
    FACTOR                         shift and go to state 77
    CONSTANTE                      shift and go to state 79

state 173

    (16) FUNCIONES -> FUNCION TIPO LETRERO LPAR OTRA RPAR SCO VARIABLES LBRA ESTATUTOS REGRESA LPAR EXPRESION . RPAR SCO RBRA

    RPAR            shift and go to state 177


state 174

    (18) FUNCIONES -> FUNCION TIPO LETRERO LPAR OTRA RPAR SCO LBRA ESTATUTOS REGRESA LPAR EXPRESION RPAR . SCO RBRA

    SCO             shift and go to state 178


state 175

    (38) DESICION -> SI LPAR EXPRESION RPAR ENTONCES LBRA ESTATUTOS RBRA SINO . LBRA ESTATUTOS RBRA

    LBRA            shift and go to state 179


state 176

    (41) NOCONDICIONAL -> DESDE LETRERO LCOR NUM_I RCOR EQUAL EXPRESION HASTA EXPRESION . HACER LBRA ESTATUTOS RBRA

    HACER           shift and go to state 180


state 177

    (16) FUNCIONES -> FUNCION TIPO LETRERO LPAR OTRA RPAR SCO VARIABLES LBRA ESTATUTOS REGRESA LPAR EXPRESION RPAR . SCO RBRA

    SCO             shift and go to state 181


state 178

    (18) FUNCIONES -> FUNCION TIPO LETRERO LPAR OTRA RPAR SCO LBRA ESTATUTOS REGRESA LPAR EXPRESION RPAR SCO . RBRA

    RBRA            shift and go to state 182


state 179

    (38) DESICION -> SI LPAR EXPRESION RPAR ENTONCES LBRA ESTATUTOS RBRA SINO LBRA . ESTATUTOS RBRA
    (21) ESTATUTOS -> . EST ESTATUTOS
    (22) ESTATUTOS -> . empty
    (23) EST -> . ASIGNACION
    (24) EST -> . LECTURA
    (25) EST -> . ESCRITURA
    (26) EST -> . DESICION
    (27) EST -> . CONDICIONAL
    (28) EST -> . NOCONDICIONAL
    (29) EST -> . LLAMADA
    (12) empty -> .
    (30) ASIGNACION -> . LETRERO LCOR EXPRESION RCOR EQUAL EXPRESION SCO
    (31) ASIGNACION -> . LETRERO EQUAL EXPRESION SCO
    (32) LECTURA -> . LEE LPAR OTRA RPAR SCO
    (33) ESCRITURA -> . ESCRIBE LPAR WRITE RPAR SCO
    (38) DESICION -> . SI LPAR EXPRESION RPAR ENTONCES LBRA ESTATUTOS RBRA SINO LBRA ESTATUTOS RBRA
    (39) DESICION -> . SI LPAR EXPRESION RPAR ENTONCES LBRA ESTATUTOS RBRA
    (40) CONDICIONAL -> . MIENTRAS LPAR EXPRESION RPAR HAZ LBRA ESTATUTOS RBRA
    (41) NOCONDICIONAL -> . DESDE LETRERO LCOR NUM_I RCOR EQUAL EXPRESION HASTA EXPRESION HACER LBRA ESTATUTOS RBRA
    (42) LLAMADA -> . LETRERO LPAR OTRA RPAR SCO

    RBRA            reduce using rule 12 (empty -> .)
    LETRERO         shift and go to state 52
    LEE             shift and go to state 53
    ESCRIBE         shift and go to state 54
    SI              shift and go to state 55
    MIENTRAS        shift and go to state 56
    DESDE           shift and go to state 57

    ESTATUTOS                      shift and go to state 183
    EST                            shift and go to state 43
    empty                          shift and go to state 44
    ASIGNACION                     shift and go to state 45
    LECTURA                        shift and go to state 46
    ESCRITURA                      shift and go to state 47
    DESICION                       shift and go to state 48
    CONDICIONAL                    shift and go to state 49
    NOCONDICIONAL                  shift and go to state 50
    LLAMADA                        shift and go to state 51

state 180

    (41) NOCONDICIONAL -> DESDE LETRERO LCOR NUM_I RCOR EQUAL EXPRESION HASTA EXPRESION HACER . LBRA ESTATUTOS RBRA

    LBRA            shift and go to state 184


state 181

    (16) FUNCIONES -> FUNCION TIPO LETRERO LPAR OTRA RPAR SCO VARIABLES LBRA ESTATUTOS REGRESA LPAR EXPRESION RPAR SCO . RBRA

    RBRA            shift and go to state 185


state 182

    (18) FUNCIONES -> FUNCION TIPO LETRERO LPAR OTRA RPAR SCO LBRA ESTATUTOS REGRESA LPAR EXPRESION RPAR SCO RBRA .

    PRINCIPAL       reduce using rule 18 (FUNCIONES -> FUNCION TIPO LETRERO LPAR OTRA RPAR SCO LBRA ESTATUTOS REGRESA LPAR EXPRESION RPAR SCO RBRA .)


state 183

    (38) DESICION -> SI LPAR EXPRESION RPAR ENTONCES LBRA ESTATUTOS RBRA SINO LBRA ESTATUTOS . RBRA

    RBRA            shift and go to state 186


state 184

    (41) NOCONDICIONAL -> DESDE LETRERO LCOR NUM_I RCOR EQUAL EXPRESION HASTA EXPRESION HACER LBRA . ESTATUTOS RBRA
    (21) ESTATUTOS -> . EST ESTATUTOS
    (22) ESTATUTOS -> . empty
    (23) EST -> . ASIGNACION
    (24) EST -> . LECTURA
    (25) EST -> . ESCRITURA
    (26) EST -> . DESICION
    (27) EST -> . CONDICIONAL
    (28) EST -> . NOCONDICIONAL
    (29) EST -> . LLAMADA
    (12) empty -> .
    (30) ASIGNACION -> . LETRERO LCOR EXPRESION RCOR EQUAL EXPRESION SCO
    (31) ASIGNACION -> . LETRERO EQUAL EXPRESION SCO
    (32) LECTURA -> . LEE LPAR OTRA RPAR SCO
    (33) ESCRITURA -> . ESCRIBE LPAR WRITE RPAR SCO
    (38) DESICION -> . SI LPAR EXPRESION RPAR ENTONCES LBRA ESTATUTOS RBRA SINO LBRA ESTATUTOS RBRA
    (39) DESICION -> . SI LPAR EXPRESION RPAR ENTONCES LBRA ESTATUTOS RBRA
    (40) CONDICIONAL -> . MIENTRAS LPAR EXPRESION RPAR HAZ LBRA ESTATUTOS RBRA
    (41) NOCONDICIONAL -> . DESDE LETRERO LCOR NUM_I RCOR EQUAL EXPRESION HASTA EXPRESION HACER LBRA ESTATUTOS RBRA
    (42) LLAMADA -> . LETRERO LPAR OTRA RPAR SCO

    RBRA            reduce using rule 12 (empty -> .)
    LETRERO         shift and go to state 52
    LEE             shift and go to state 53
    ESCRIBE         shift and go to state 54
    SI              shift and go to state 55
    MIENTRAS        shift and go to state 56
    DESDE           shift and go to state 57

    ESTATUTOS                      shift and go to state 187
    EST                            shift and go to state 43
    empty                          shift and go to state 44
    ASIGNACION                     shift and go to state 45
    LECTURA                        shift and go to state 46
    ESCRITURA                      shift and go to state 47
    DESICION                       shift and go to state 48
    CONDICIONAL                    shift and go to state 49
    NOCONDICIONAL                  shift and go to state 50
    LLAMADA                        shift and go to state 51

state 185

    (16) FUNCIONES -> FUNCION TIPO LETRERO LPAR OTRA RPAR SCO VARIABLES LBRA ESTATUTOS REGRESA LPAR EXPRESION RPAR SCO RBRA .

    PRINCIPAL       reduce using rule 16 (FUNCIONES -> FUNCION TIPO LETRERO LPAR OTRA RPAR SCO VARIABLES LBRA ESTATUTOS REGRESA LPAR EXPRESION RPAR SCO RBRA .)


state 186

    (38) DESICION -> SI LPAR EXPRESION RPAR ENTONCES LBRA ESTATUTOS RBRA SINO LBRA ESTATUTOS RBRA .

    LETRERO         reduce using rule 38 (DESICION -> SI LPAR EXPRESION RPAR ENTONCES LBRA ESTATUTOS RBRA SINO LBRA ESTATUTOS RBRA .)
    LEE             reduce using rule 38 (DESICION -> SI LPAR EXPRESION RPAR ENTONCES LBRA ESTATUTOS RBRA SINO LBRA ESTATUTOS RBRA .)
    ESCRIBE         reduce using rule 38 (DESICION -> SI LPAR EXPRESION RPAR ENTONCES LBRA ESTATUTOS RBRA SINO LBRA ESTATUTOS RBRA .)
    SI              reduce using rule 38 (DESICION -> SI LPAR EXPRESION RPAR ENTONCES LBRA ESTATUTOS RBRA SINO LBRA ESTATUTOS RBRA .)
    MIENTRAS        reduce using rule 38 (DESICION -> SI LPAR EXPRESION RPAR ENTONCES LBRA ESTATUTOS RBRA SINO LBRA ESTATUTOS RBRA .)
    DESDE           reduce using rule 38 (DESICION -> SI LPAR EXPRESION RPAR ENTONCES LBRA ESTATUTOS RBRA SINO LBRA ESTATUTOS RBRA .)
    RBRA            reduce using rule 38 (DESICION -> SI LPAR EXPRESION RPAR ENTONCES LBRA ESTATUTOS RBRA SINO LBRA ESTATUTOS RBRA .)
    REGRESA         reduce using rule 38 (DESICION -> SI LPAR EXPRESION RPAR ENTONCES LBRA ESTATUTOS RBRA SINO LBRA ESTATUTOS RBRA .)


state 187

    (41) NOCONDICIONAL -> DESDE LETRERO LCOR NUM_I RCOR EQUAL EXPRESION HASTA EXPRESION HACER LBRA ESTATUTOS . RBRA

    RBRA            shift and go to state 188


state 188

    (41) NOCONDICIONAL -> DESDE LETRERO LCOR NUM_I RCOR EQUAL EXPRESION HASTA EXPRESION HACER LBRA ESTATUTOS RBRA .

    LETRERO         reduce using rule 41 (NOCONDICIONAL -> DESDE LETRERO LCOR NUM_I RCOR EQUAL EXPRESION HASTA EXPRESION HACER LBRA ESTATUTOS RBRA .)
    LEE             reduce using rule 41 (NOCONDICIONAL -> DESDE LETRERO LCOR NUM_I RCOR EQUAL EXPRESION HASTA EXPRESION HACER LBRA ESTATUTOS RBRA .)
    ESCRIBE         reduce using rule 41 (NOCONDICIONAL -> DESDE LETRERO LCOR NUM_I RCOR EQUAL EXPRESION HASTA EXPRESION HACER LBRA ESTATUTOS RBRA .)
    SI              reduce using rule 41 (NOCONDICIONAL -> DESDE LETRERO LCOR NUM_I RCOR EQUAL EXPRESION HASTA EXPRESION HACER LBRA ESTATUTOS RBRA .)
    MIENTRAS        reduce using rule 41 (NOCONDICIONAL -> DESDE LETRERO LCOR NUM_I RCOR EQUAL EXPRESION HASTA EXPRESION HACER LBRA ESTATUTOS RBRA .)
    DESDE           reduce using rule 41 (NOCONDICIONAL -> DESDE LETRERO LCOR NUM_I RCOR EQUAL EXPRESION HASTA EXPRESION HACER LBRA ESTATUTOS RBRA .)
    RBRA            reduce using rule 41 (NOCONDICIONAL -> DESDE LETRERO LCOR NUM_I RCOR EQUAL EXPRESION HASTA EXPRESION HACER LBRA ESTATUTOS RBRA .)
    REGRESA         reduce using rule 41 (NOCONDICIONAL -> DESDE LETRERO LCOR NUM_I RCOR EQUAL EXPRESION HASTA EXPRESION HACER LBRA ESTATUTOS RBRA .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for RPAR in state 145 resolved as shift
